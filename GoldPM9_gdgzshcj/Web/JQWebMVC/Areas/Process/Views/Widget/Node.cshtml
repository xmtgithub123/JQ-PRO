@{
    Layout = "~/Areas/Center/Views/Shared/_Layout1.cshtml";
}
<div id="divtoolbar" class="headtoolbar">
    <div style="float:left;width:5px"></div>
    <div class="headtoolbarbtn" onclick="sure()">
        <span class="fa fa-check"></span>
        <span>确定</span>
    </div>
    <div class="headtoolbarbtn" onclick="frameElement.closeDialog()">
        <span class="fa fa-close"></span>
        <span>关闭</span>
    </div>
</div>
<div id="divcontent">
    <div id="div1" style="display:none;padding:5px;">
        <table class="documenttable" style="width:100%">
            <tr>
                <th style="width:15%">名称</th>
                <td style="width:35%">
                    <input type="text" id="txtName" name="" class="yc_textbox" style="width:80%">
                </td>
                <th style="width:15%">
                    类型
                </th>
                <td style="width:35%">
                    <span id="lblTypeName"></span>
                </td>
            </tr>
            <tr>
                <th>标题</th>
                <td>
                    <input type="text" id="txtDisplayName" name="" class="yc_textbox" style="width:80%">
                </td>
                <th></th>
                <td></td>
            </tr>
        </table>
    </div>
    <div id="div2" style="display:none;padding:5px;">
        <div class="yc_headtoolbar2" style="border:1px solid #EFEFEF;float:none;box-sizing:border-box;">
            <div style="float:left;width:5px">
            </div>
            <div class="headtoolbarbtn" style="height:28px;line-height:26px;" onclick="appendGridData()">
                <span class="fa fa-plus"></span>
                <span>添加</span>
            </div>
            <div class="headtoolbarbtn" style="height:28px;line-height:26px;" onclick="deleteRow()">
                <span class="fa fa-minus"></span>
                <span>删除</span>
            </div>
        </div>
        <div id="div_grid" style="margin-top:-1px;"></div>
    </div>
</div>
<link href="@(Url.Content("~/Content/chart/chart.tab.css"))" rel="stylesheet" />
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.js"))"></script>
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.tab.js"))"></script>
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.grid.js"))"></script>
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.dialog.js"))"></script>
<script type="text/javascript">

    var yGrid, temp = 0;
    function init() {
        var shape = frameElement.api.getSource();
        var tabs = [
            {
                name: "property",
                title: "属性",
                element: "div1",
                closable: false
            }
        ];
        if (shape.virtualTransitions) {
            tabs.push({
                name: "virtualtransitions",
                title: "虚拟路径",
                element: "div2",
                closable: false
            });
        }
        var yTab = new YChart.Tab({
            container: "divcontent",
            offsetHeight: 0,
            tabs: tabs
        });
        switch (shape.symbol) {
            case "start":
                YChart.setText(document.getElementById("lblTypeName"), "开始");
                document.getElementById("txtDisplayName").setAttribute("readonly", "readonly");
                break;
            case "end":
                YChart.setText(document.getElementById("lblTypeName"), "结束");
                document.getElementById("txtDisplayName").setAttribute("readonly", "readonly");
                break;
            case "activity":
                YChart.setText(document.getElementById("lblTypeName"), "活动");
                break;
            case "transition":
                YChart.setText(document.getElementById("lblTypeName"), "线条");
                break;
        }
        document.getElementById("txtDisplayName").value = shape.displayName;
        document.getElementById("txtName").value = shape.name;
        if (shape.virtualTransitions) {
            initPropertyGrid(shape);
        }
    }

    init();

    function initPropertyGrid(shape) {
        yGrid = new YChart.Grid({
            height: 302,
            container: document.getElementById("div_grid"),
            idField: "id",
            checkbox: true,
            columns: [
                {
                    title: "名称", width: 100, field: "name", align: "center", formatter: function (cell, rowData) {
                        cell.appendChild(YChart.createElement("input", { id: "txtName" + rowData.id, type: "text", className: "yc_textbox", value: rowData.name }, { width: "80px" }));
                    }
                },
                {
                    title: "类型", width: 350, field: "type", align: "left", formatter: function (cell, rowData) {
                        var select = document.createElement("select");
                        select.className = "yc_select";
                        select.setAttribute("id", "listType" + rowData.id);
                        cell.appendChild(select);
                        var option = document.createElement("option");
                        option.setAttribute("value", "1");
                        option.appendChild(document.createTextNode("节点"));
                        if (rowData.type == "1") {
                            option.selected = true;
                        }
                        select.appendChild(option);
                        option = document.createElement("option");
                        option.setAttribute("value", "2");
                        option.appendChild(document.createTextNode("变量"));
                        if (rowData.type == "2") {
                            option.selected = true;
                        }
                        select.appendChild(option);
                        var listShape = document.createElement("select");
                        listShape.className = "yc_select";
                        listShape.style.marginLeft = "3px";
                        listShape.style.width = "100px";
                        listShape.setAttribute("id", "listShape" + rowData.id);
                        cell.appendChild(listShape);
                        var shapes = frameElement.api.getShapes();
                        for (var i = 0; i < shapes.length; i++) {
                            if (shapes[i] == shape || shapes[i].symbol == "start" || !shapes[i].symbol) {
                                continue;
                            }
                            var option = document.createElement("option");
                            option.appendChild(document.createTextNode(shapes[i].displayName));
                            option.setAttribute("value", shapes[i].name);
                            if (shapes[i].name == rowData.toName) {
                                option.selected = true;
                            }
                            listShape.appendChild(option);
                        }
                        var txtVariableName = YChart.createElement("input", { id: "txtVariable" + rowData.id, type: "text", className: "yc_textbox", placeholder: "请输入变量名称" }, { width: "263px", marginLeft: "3px" });
                        txtVariableName.value = rowData.variableName;
                        cell.appendChild(txtVariableName);
                        var txtExpression = YChart.createElement("input", { id: "txtExpression" + rowData.id, type: "text", className: "yc_textbox", placeholder: "请输入表达式" }, { width: "160px", marginLeft: "3px" });
                        txtExpression.value = rowData.expression;
                        cell.appendChild(txtExpression);
                        select.onchange = function () {
                            if (YChart.getSelectedValue(this) == "1") {
                                listShape.style.display = "";
                                txtExpression.style.display = "";
                                txtVariableName.style.display = "none";
                            }
                            else {
                                listShape.style.display = "none";
                                txtExpression.style.display = "none";
                                txtVariableName.style.display = "";
                            }
                        }
                        select.onchange();
                    }
                }
            ]
        });
        yGrid.setDatas(shape.virtualTransitions);
        for (var i = 0; i < shape.virtualTransitions.length; i++) {
            if (shape.virtualTransitions[i].id > temp) {
                temp = shape.virtualTransitions[i].id;
            }
        }
    }

    function appendGridData() {
        yGrid.appendData({
            id: ++temp,
            name: "",
            type: "1",
            variableName: "",
            expression: ""
        });
    }

    function deleteRow() {
        if (yGrid.choosed.length == 0) {
            return;
        }
        YChart.Dialog.confirm("提示", "确定要删除吗？", function (flag) {
            if (!flag) {
                return;
            }
            for (var i = 0; i < yGrid.choosed.length; i++) {
                yGrid.removeRow(yGrid.getRowID(yGrid.choosed[i]));
                i--;
            }
        });
    }

    function sure() {
        var name = YChart.trim(document.getElementById("txtName").value);
        var displayName = YChart.trim(document.getElementById("txtDisplayName").value);
        if (name == "" || displayName == "") {
            return;
        }
        var virtualTransitions = [];
        for (var i = 0; i < yGrid.datas.length; i++) {
            var vt = {
                id: yGrid.datas[i].id,
                name: document.getElementById("txtName" + yGrid.datas[i].id).value,
                type: YChart.getSelectedValue(document.getElementById("listType" + yGrid.datas[i].id)),
            };
            if (vt.type == "1") {
                //节点
                vt.variableName = "";
                vt.toName = YChart.getSelectedValue(document.getElementById("listShape" + yGrid.datas[i].id));
                vt.expression = document.getElementById("txtExpression" + yGrid.datas[i].id).value;
            }
            else if (vt.type == "2") {
                //变量
                vt.variableName = document.getElementById("txtVariable" + yGrid.datas[i].id).value;
                vt.toName = "";
                vt.expression = "";
            }
            virtualTransitions.push(vt);
        }
        if (frameElement.api.saveData({
            name: name, virtualTransitions: virtualTransitions, displayName: displayName
        }) == false) {
            return;
        }
        frameElement.closeDialog();
    }
</script>