@{
    Layout = "~/Areas/Center/Views/Shared/_Layout1.cshtml";
}
<div id="divtoolbar" class="headtoolbar">
    <div style="float:left;width:5px"></div>
    <div class="headtoolbarbtn" onclick="sure()">
        <span class="fa fa-check"></span>
        <span>确定</span>
    </div>
    <div class="headtoolbarbtn" onclick="frameElement.closeDialog()">
        <span class="fa fa-close"></span>
        <span>关闭</span>
    </div>
</div>
<div id="divcontent">
    <div style="padding:5px;">
        <table class="documenttable" style="width:100%">
            <tr>
                <th style="width:15%">模式</th>
                <td style="width:85%">
                    <select id="listAction" class="yc_select"></select>
                    <div id="divMultiBack" style="display:inline">
                        <input type="checkbox" id="cbUseMultiBack" /><label for="cbUseMultiBack">使用多步退回</label>
                    </div>
                </td>
            </tr>
            <tr>
                <th>步骤</th>
                <td id="tdSteps" style="cursor:default"></td>
            </tr>
            <tr>
                <th>意见</th>
                <td>
                    <textarea id="txtNote" style="width:320px" class="yc_textbox" rows="3" placeholder="请输入审批意见"></textarea>
                </td>
            </tr>
        </table>
    </div>
</div>
<style type="text/css">
    .steptable {
        width: 320px;
        border-collapse: collapse;
        table-layout: fixed;
    }

        .steptable tr td {
            border: none;
        }
</style>
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.js"))"></script>
<script type="text/javascript" src="@(Url.Content("~/Content/chart/chart.dialog.js"))"></script>
<script type="text/javascript">
    //var allSteps = [];
    var params = {
        multiUsers: [],
    };
    function init() {
        var process = frameElement.api.getData();
        params.process = process;
        params.variables = frameElement.api.getVariables();
        YChart.ajax({
            url: "@(Url.Action("GetSubmitData", "Widget", new { @area = "Process" }))",
            type: "POST",
            data: { id: process.id, isTemplate: process.isTemplate, action: "LoadProcess", variables: params.variables, activityID: process.Step.id },
            isShowMask: true,
            success: function (result) {
                if (!result.IsSuccess) {
                    YChart.Dialog.alert("提示", result.ErrorMessage);
                    return;
                }
                loadProcess(result);
            }
        });
    }

    init();

    function loadProcess(data) {
        var _listAction = document.getElementById("listAction");
        if (data.AllowSubmitToNext) {
            var option = document.createElement("option");
            option.setAttribute("value", "SubmitToNext");
            option.appendChild(document.createTextNode("审批提交"));
            _listAction.appendChild(option);
        }
        if (data.AllowSubmitToBack) {
            var option = document.createElement("option");
            option.setAttribute("value", "SubmitToBack");
            option.appendChild(document.createTextNode("审批退回"));
            _listAction.appendChild(option);
        }
        if (data.TransfterUsers && data.TransfterUsers.length > 0) {
            var option = document.createElement("option");
            option.setAttribute("value", "TransfterWork");
            option.appendChild(document.createTextNode("工作移交"));
            _listAction.appendChild(option);
        }
        _listAction.onchange = function () {
            var _value = YChart.getSelectedValue(this);
            switch (_value) {
                case "SubmitToNext":
                    document.getElementById("divMultiBack").style.display = "none";
                    initSteps(_value, data.NextSteps);
                    break;
                case "SubmitToBack":
                    if (data.BackSteps.length > 1) {
                        document.getElementById("divMultiBack").style.display = "inline";
                    }
                    else {
                        document.getElementById("divMultiBack").style.display = "none";
                    }
                    initSteps(_value, data.BackSteps);
                    break;
                case "TransfterWork":
                    document.getElementById("divMultiBack").style.display = "none";
                    initSteps(_value, [{
                        ID: params.process.Step.id,
                        Name: params.process.Step.name,
                        DisplayName: params.process.Step.displayName,
                        Symbol: params.process.Step.symbol,
                        Users: data.TransfterUsers
                    }]);
                    break;
            }
        }
        _listAction.onchange();
        document.getElementById("cbUseMultiBack").onchange = function () {
            if (this.checked) {
                return;
            }
            var _tdSteps = document.getElementById("tdSteps");
            for (var i = 0; i < _tdSteps.childNodes.length; i++) {
                if (_tdSteps.nodeType != 1) {
                    continue;
                }
                if (_tdSteps.childNodes[i].getAttribute("action") === "SubmitToBack") {
                    var isChoosed = false, _table = _tdSteps.childNodes[i];
                    for (var j = 0; j < _table.rows.length; j++) {
                        if (_table.rows[j].cells[1].childNodes.length == 0 && _table.rows[j].cells[1].childNodes[0].nodeType != 1) {
                            continue;
                        }
                        if (isChoosed) {
                            if (_table.rows[j].cells[1].childNodes[0].tagName == "SELECT") {
                                _table.rows[j].cells[1].childNodes[0].childNodes[0].selected = true;
                            }
                        }
                        else {
                            if (_table.rows[j].cells[1].childNodes[0].tagName == "SELECT") {
                                if (!_table.rows[j].cells[1].childNodes[0].childNodes[0].selected) {
                                    isChoosed = true;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    //function pushToAllSteps(action, steps) {
    //    allSteps.push({
    //        action: action,
    //        steps: result.Steps
    //    });
    //}

    function initSteps(action, steps) {
        //处理节点
        if (!action) {
            return;
        }
        var _tdSteps = document.getElementById("tdSteps");
        var isIn = false;
        for (var i = 0; i < _tdSteps.childNodes.length; i++) {
            if (_tdSteps.nodeType != 1) {
                continue;
            }
            if (_tdSteps.childNodes[i].getAttribute("action") === action) {
                isIn = true;
                _tdSteps.childNodes[i].style.display = "";
            }
            else {
                _tdSteps.childNodes[i].style.display = "none";
            }
        }
        if (isIn) {
            return;
        }
        if (steps) {
            loadSteps(_tdSteps, action, steps);
        }
    }

    function loadSteps(parent, action, steps) {
        var _table = document.createElement("table");
        _table.setAttribute("action", action);
        _table.className = "steptable";
        parent.appendChild(_table);
        var _isSelected = false;
        for (var i = 0; i < steps.length; i++) {
            var _tr = document.createElement("tr");
            _tr.setAttribute("stepname", steps[i].Name);
            _tr.setAttribute("stepid", steps[i].ID);
            _tr.setAttribute("stepsymbol", steps[i].Symbol);
            _table.appendChild(_tr);
            var _td = document.createElement("td");
            _td.style.width = "90px";
            _tr.appendChild(_td);
            _td.appendChild(document.createTextNode(steps[i].DisplayName));
            _td = document.createElement("td");
            _td.style.width = "220px";
            _tr.appendChild(_td);
            switch (steps[i].Symbol) {
                case "end":
                    if (steps.length == 1) {
                        //_td.appendChild(document.createTextNode("流程结束"));
                    }
                    else {
                        var _select = document.createElement("select");
                        _select.className = "yc_select";
                        _td.appendChild(_select);
                        var opt = document.createElement("option");
                        opt.appendChild(document.createTextNode("未选择"));
                        opt.setAttribute("value", "");
                        _select.appendChild(opt);
                        opt = document.createElement("option");
                        opt.appendChild(document.createTextNode("流程结束"));
                        opt.setAttribute("value", "0");
                        _select.appendChild(opt);
                    }
                    break;
                case "activity":
                    var _select = document.createElement("select");
                    _select.className = "yc_select";
                    _td.appendChild(_select);
                    if (steps.length > 1) {
                        var opt = document.createElement("option");
                        opt.appendChild(document.createTextNode("未选择"));
                        opt.setAttribute("value", "");
                        _select.appendChild(opt);
                    }
                    for (var j = 0; j < steps[i].Users.length; j++) {
                        var option = document.createElement("option");
                        option.appendChild(document.createTextNode(steps[i].Users[j].Name));
                        option.setAttribute("value", steps[i].Users[j].ID);
                        if (action == "SubmitToBack") {
                            if (steps[i].Users[j].IsDefaultChoosed == true && !_isSelected) {
                                option.selected = true;
                                _isSelected = true;
                            }
                        }
                        else if (steps[i].Users[j].IsDefaultChoosed == true) {
                            option.selected = true;
                        }
                        _select.appendChild(option);
                    }
                    if (action == "SubmitToBack") {
                        _select.onchange = function () {
                            if (document.getElementById("cbUseMultiBack").checked) {
                                return;
                            }
                            var _v = YChart.getSelectedValue(this);
                            if (_v == "") {
                                return;
                            }
                            var _table = this.parentNode.parentNode.parentNode;
                            for (var i = 0; i < _table.rows.length; i++) {
                                if (_table.rows[i].cells[1].childNodes.length == 0 && _table.rows[i].cells[1].childNodes[0].nodeType != 1 || _table.rows[i].cells[1].childNodes[0] == this) {
                                    continue;
                                }
                                if (_table.rows[i].cells[1].childNodes[0].tagName == "SELECT") {
                                    _table.rows[i].cells[1].childNodes[0].childNodes[0].selected = true;
                                }
                            }
                        }
                    }
                    break;
                case "signactivity":
                    var _txt = YChart.createElement("input", { type: "text", className: "yc_textbox", placeholder: "请选择人员", readonly: "readonly" }, { width: "160px" });
                    _td.appendChild(_txt);
                    var _btn = YChart.createElement("div", { className: "yc_btn_style1" }, { display: "inline-block", marginLeft: "3px" }, "清空");
                    _td.appendChild(_btn);
                    var users = steps[i].Users;
                    var isShowAllUser = steps[i].IsShowAllUser;
                    var stepName = steps[i].Name;
                    var defaultChoosed = [];
                    for (var j = 0; j < steps[i].Users.length; j++) {
                        if (steps[i].Users[j].IsDefaultChoosed) {
                            defaultChoosed.push(steps[i].Users[j]);
                            if (_txt.value != "") {
                                _txt.value += ",";
                            }
                            _txt.value += steps[i].Users[j].Name;
                        }
                    }
                    setStepMultiUsers(stepName, defaultChoosed);
                    _txt.ondblclick = function () {
                        var usersl = getStepMultiUsers(stepName);
                        var lastids = "";
                        for (var i = 0; i < usersl.length; i++) {
                            if (i != 0) {
                                lastids += ",";
                            }
                            lastids += usersl[i].ID;
                        }
                        new YChart.Dialog({
                            url: "@(Url.Action("ChooseUser","Widget",new { @area="Center" }))?ids=" + lastids,
                            height: 500,
                            width: 520,
                            title: "选择用户",
                            icon: "fa-child",
                            api: {
                                getUserIDs: function () {
                                    if (isShowAllUser) {
                                        return null;
                                    }
                                    else {
                                        var ids = "";
                                        for (var i = 0; i < users.length; i++) {
                                            if (i != 0) {
                                                ids += ",";
                                            }
                                            ids += users[i].ID;
                                        }
                                        return ids;
                                    }
                                },
                                afterChoosed: function (choosedUsers) {
                                    var usersc = [];
                                    _txt.value = "";
                                    for (var i = 0; i < choosedUsers.length; i++) {
                                        if (usersc.length > 0) {
                                            _txt.value += ",";
                                        }
                                        usersc.push({
                                            ID: choosedUsers[i].ID,
                                            Name: choosedUsers[i].Name
                                        })
                                        _txt.value += choosedUsers[i].Name;
                                    }
                                    setStepMultiUsers(stepName, usersc);
                                }
                            }
                        });
                    }
                    _btn.onclick = function () {
                        _txt.value = "";
                        setStepMultiUsers(stepName, []);
                    }
                    break;
            }
        }
    }

    function sure() {
        var postData = {};
        postData.action = YChart.getSelectedValue(document.getElementById("listAction"));
        var nextSteps = YChart.loadXml("<Root></Root>");
        var _tdSteps = document.getElementById("tdSteps");
        for (var i = 0; i < _tdSteps.childNodes.length; i++) {
            if (_tdSteps.childNodes[i].getAttribute("action") != postData.action) {
                continue;
            }
            for (var j = 0; j < _tdSteps.childNodes[i].rows.length; j++) {
                var xStep = nextSteps.createElement("Step");
                var xUsers = nextSteps.createElement("Users");
                switch (_tdSteps.childNodes[i].rows[j].getAttribute("stepsymbol")) {
                    case "end":
                        xStep.setAttribute("lastStep", "1");
                        break;
                    case "activity":
                        //验证是否
                        var option = YChart.getSelectedOption(_tdSteps.childNodes[i].rows[j].cells[1].childNodes[0]);
                        if (!option || option.getAttribute("value") == "") {
                            continue;
                        }
                        //获取出数据
                        var xUser = nextSteps.createElement("User");
                        xUsers.appendChild(xUser);
                        xUser.textContent = option.getAttribute("value");
                        xUser.setAttribute("name", option.textContent);
                        break;
                    case "signactivity":
                        var users = getStepMultiUsers(_tdSteps.childNodes[i].rows[j].getAttribute("stepname"));
                        if (!users || users.length == 0) {
                            continue;
                        }
                        for (var k = 0; k < users.length; k++) {
                            var xUser = nextSteps.createElement("User");
                            xUsers.appendChild(xUser);
                            xUser.textContent = users[k].ID;
                            xUser.setAttribute("name", users[k].Name);
                        }
                        break;
                }
                xStep.appendChild(xUsers);
                xStep.setAttribute("name", _tdSteps.childNodes[i].rows[j].getAttribute("stepname"));
                xStep.setAttribute("id", _tdSteps.childNodes[i].rows[j].getAttribute("stepid"));
                xStep.setAttribute("symbol", _tdSteps.childNodes[i].rows[j].getAttribute("stepsymbol"));
                nextSteps.documentElement.appendChild(xStep);
            }
            break;
        }
        if (nextSteps.documentElement.childNodes.length == 0) {
            YChart.Dialog.alert("提示", "请至少选择一位处理人员！");
            return;
        }
        YChart.Dialog.confirm("确认提示", "您确定要" + YChart.getSelectedText(document.getElementById("listAction")) + "吗？", function (result) {
            if (!result) {
                return;
            }
            postData.nextSteps = nextSteps.documentElement.outerHTML;
            postData.id = params.process.id;
            postData.isTemplate = params.process.isTemplate;
            postData.activityID = params.process.Step.id;
            postData.variables = params.variables;
            postData.note = document.getElementById("txtNote").value;
            if (frameElement.api.getFormSaveOpions) {
                var saveOptions = frameElement.api.getFormSaveOpions();
                postData.formID = saveOptions.formID;
                postData.formTemplateID = saveOptions.formTemplateID;
                postData.formData = saveOptions.formData;
            }
            if (postData.isTemplate == "1") {
                postData.currentStepName = params.process.Step.name;
            }
            YChart.ajax({
                url: "@(Url.Action("Submit", "Widget", new { @area = "Process" }))",
                type: "POST",
                data: postData,
                isShowTopMask: true,
                success: function (result) {
                    if (result.Result == false) {
                        YChart.Dialog.alert("提示", result.Message);
                        return;
                    }
                    frameElement.api.afterSubmit();
                    frameElement.closeDialog();
                }
            });
        });
    }

    function getStepMultiUsers(stepName) {
        for (var i = 0; i < params.multiUsers.length; i++) {
            if (params.multiUsers[i].stepName == stepName) {
                return params.multiUsers[i].users;
            }
        }
    }

    function setStepMultiUsers(stepName, users) {
        for (var i = 0; i < params.multiUsers.length; i++) {
            if (params.multiUsers[i].stepName == stepName) {
                params.multiUsers[i].users = users;
                return;
            }
        }
        params.multiUsers.push({ stepName: stepName, users: users });
    }
</script>