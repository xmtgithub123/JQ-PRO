#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/usercontrol/selEmployee.cshtml")]
    public partial class _Views_usercontrol_selEmployee_cshtml : System.Web.Mvc.WebViewPage<DataModel.Models.SelEmpParames>
    {
        public _Views_usercontrol_selEmployee_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("<script>\r\n    var urlLeft = \"");

            
            #line 3 "..\..\Views\usercontrol\selEmployee.cshtml"
              Write(Url.Action("employeeByDepJson", "usercontrol", new { @area = "Core"}));

            
            #line default
            #line hidden
WriteLiteral("?state=closed&ids=");

            
            #line 3 "..\..\Views\usercontrol\selEmployee.cshtml"
                                                                                                      Write(Model.vals);

            
            #line default
            #line hidden
WriteLiteral("\";\r\n    var urlRight = \"");

            
            #line 4 "..\..\Views\usercontrol\selEmployee.cshtml"
               Write(Url.Action("employeeByDepJson", "usercontrol", new { @area = "Core"}));

            
            #line default
            #line hidden
WriteLiteral("?state=closed&ids=");

            
            #line 4 "..\..\Views\usercontrol\selEmployee.cshtml"
                                                                                                       Write(Model.vals);

            
            #line default
            #line hidden
WriteLiteral("&type=1\";\r\n\r\n    $.extend($.fn.tree.methods, {\r\n        search: function (jqTree," +
" searchText) {\r\n            //easyui tree的tree对象。可以通过tree.methodName(jqTree)方式调用" +
"easyui tree的方法\r\n            var tree = this;\r\n\r\n            //获取所有的树节点\r\n        " +
"    var nodeList = getAllNodes(jqTree, tree);\r\n\r\n            //如果没有搜索条件，则展示所有树节点" +
"\r\n            searchText = $.trim(searchText);\r\n            if (searchText == \"\"" +
") {\r\n                for (var i = 0; i < nodeList.length; i++) {\r\n              " +
"      $(\".tree-node-targeted\", nodeList[i].target).removeClass(\"tree-node-target" +
"ed\");\r\n                    $(nodeList[i].target).show();\r\n                }\r\n   " +
"             //展开已选择的节点（如果之前选择了）\r\n                var selectedNode = tree.getSel" +
"ected(jqTree);\r\n                if (selectedNode) {\r\n                    tree.ex" +
"pandTo(jqTree, selectedNode.target);\r\n                }\r\n                return;" +
"\r\n            }\r\n\r\n            //搜索匹配的节点并高亮显示\r\n            var matchedNodeList =" +
" [];\r\n            if (nodeList && nodeList.length > 0) {\r\n                var no" +
"de = null;\r\n                for (var i = 0; i < nodeList.length; i++) {\r\n       " +
"             node = nodeList[i];\r\n                    if (isMatch(searchText, no" +
"de.text)) {\r\n                        matchedNodeList.push(node);\r\n              " +
"      }\r\n                }\r\n                //隐藏所有节点\r\n                for (var i" +
" = 0; i < nodeList.length; i++) {\r\n                    $(\".tree-node-targeted\", " +
"nodeList[i].target).removeClass(\"tree-node-targeted\");\r\n                    $(no" +
"deList[i].target).hide();\r\n                }\r\n\r\n                //折叠所有节点\r\n      " +
"          tree.collapseAll(jqTree);\r\n\r\n                //展示所有匹配的节点以及父节点\r\n       " +
"         for (var i = 0; i < matchedNodeList.length; i++) {                \r\n   " +
"                 var tNode = matchedNodeList[i];                  \r\n            " +
"        if (tNode.text != \"请选择人员\") {\r\n                        showMatchedNode(jq" +
"Tree, tree, tNode);\r\n                        if (!tree.isLeaf(jqTree, tNode.targ" +
"et)) {\r\n                            var children = tree.getChildren(jqTree, tNod" +
"e.target);\r\n                            if (children && children.length > 0) {\r\n" +
"                                for (var k = 0; k < children.length; k++) {\r\n   " +
"                                 if ($(children[k].target).is(\":hidden\")) {\r\n   " +
"                                     $(children[k].target).removeAttr(\"style\");\r" +
"\n                                    }\r\n                                }\r\n     " +
"                       }\r\n                        }\r\n                    }      " +
"      \r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * " +
"展示节点的子节点（子节点有可能在搜索的过程中被隐藏了）\r\n         * param node easyui tree节点\r\n         */\r\n " +
"       showChildren: function (jqTree, node) {\r\n            //easyui tree的tree对象" +
"。可以通过tree.methodName(jqTree)方式调用easyui tree的方法\r\n            var tree = this;\r\n\r\n" +
"            //展示子节点\r\n            if (!tree.isLeaf(jqTree, node.target)) {\r\n     " +
"           var children = tree.getChildren(jqTree, node.target);\r\n              " +
"  if (children && children.length > 0) {\r\n                    for (var i = 0; i " +
"< children.length; i++) {\r\n                        if ($(children[i].target).is(" +
"\":hidden\")) {\r\n                            $(children[i].target).show();\r\n      " +
"                  }\r\n                    }\r\n                }\r\n            }\r\n  " +
"      },\r\n\r\n\r\n        scrollTo: function (jqTree, param) {\r\n            //easyui" +
" tree的tree对象。可以通过tree.methodName(jqTree)方式调用easyui tree的方法\r\n            var tree" +
" = this;\r\n\r\n            //如果node为空，则获取当前选中的node\r\n            var targetNode = pa" +
"ram && param.targetNode ? param.targetNode : tree.getSelected(jqTree);\r\n\r\n      " +
"      if (targetNode != null) {\r\n                //判断节点是否在可视区域\r\n                " +
"var root = tree.getRoot(jqTree);\r\n                var $targetNode = $(targetNode" +
".target);\r\n                var container = param && param.treeContainer ? param." +
"treeContainer : jqTree.parent();\r\n                var containerH = container.hei" +
"ght();\r\n                var nodeOffsetHeight = $targetNode.offset().top - contai" +
"ner.offset().top;\r\n                if (nodeOffsetHeight > (containerH - 30)) {\r\n" +
"                    var scrollHeight = container.scrollTop() + nodeOffsetHeight " +
"- containerH + 30;\r\n                    container.scrollTop(scrollHeight);\r\n    " +
"            }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    function showMat" +
"chedNode(jqTree, tree, node) {\r\n        //展示所有父节点\r\n        $(node.target).show()" +
";\r\n        $(\".tree-title\", node.target).addClass(\"tree-node-targeted\");\r\n      " +
"  var pNode = node;\r\n        while ((pNode = tree.getParent(jqTree, pNode.target" +
"))) {\r\n            $(pNode.target).show();\r\n        }\r\n        //展开到该节点\r\n       " +
" tree.expandTo(jqTree, node.target);\r\n        //如果是非叶子节点，需折叠该节点的所有子节点\r\n        i" +
"f (!tree.isLeaf(jqTree, node.target)) {\r\n            tree.collapse(jqTree, node." +
"target);\r\n        }\r\n    }\r\n\r\n\r\n    function isMatch(searchText, targetText) {\r\n" +
"        return $.trim(targetText) != \"\" && targetText.indexOf(searchText) != -1;" +
"\r\n    }\r\n\r\n\r\n    function getAllNodes(jqTree, tree) {\r\n        var allNodeList =" +
" jqTree.data(\"allNodeList\");\r\n        if (!allNodeList) {\r\n            var roots" +
" = tree.getRoots(jqTree);\r\n            allNodeList = getChildNodeList(jqTree, tr" +
"ee, roots);\r\n            jqTree.data(\"allNodeList\", allNodeList);\r\n        }\r\n  " +
"      return allNodeList;\r\n    }\r\n\r\n    function getChildNodeList(jqTree, tree, " +
"nodes) {\r\n        var childNodeList = [];\r\n        if (nodes && nodes.length > 0" +
") {\r\n            var node = null;\r\n            for (var i = 0; i < nodes.length;" +
" i++) {\r\n                node = nodes[i];\r\n                childNodeList.push(no" +
"de);\r\n                if (!tree.isLeaf(jqTree, node.target)) {\r\n                " +
"    var children = tree.getChildren(jqTree, node.target);\r\n                    c" +
"hildNodeList = childNodeList.concat(getChildNodeList(jqTree, tree, children));\r\n" +
"                }\r\n            }\r\n        }\r\n        return childNodeList;\r\n    " +
"}\r\n\r\n\r\n\r\n    $(\'#employeeLeftTree\').tree({\r\n        onlyLeafCheck: true,//只允许子节点" +
"出现选择框\r\n        url: urlLeft,//open\r\n        animate: true,\r\n        checkbox: fa" +
"lse,\r\n        onClick: function (node) {\r\n            var parent = $(this).tree(" +
"\"getParent\", node.target),\r\n              childs = $(this).tree(\"getChildren\", n" +
"ode.target);\r\n            if (!node.children) {\r\n                clickFun(node, " +
"parent, childs, \'employeeLeftTree\');\r\n            }\r\n            else {\r\n       " +
"         $(this).tree(\"expand\", node);\r\n            }\r\n        },\r\n        onLoa" +
"dSuccess: function (node, data) {\r\n            regditEvent(data, \"employeeLeftTr" +
"ee\");\r\n        }\r\n    });\r\n\r\n    $(\'#employeeRightTree\').tree({\r\n        //data:" +
" [{ id: -1, text: \'已选人员\', state: \'open\' }],\r\n        url: urlRight,\r\n        ani" +
"mate: true,\r\n        checkbox: false,\r\n        onClick: function (node) {\r\n     " +
"       var parent = $(this).tree(\"getParent\", node.target),\r\n              child" +
"s = $(this).tree(\"getChildren\", node.target);\r\n            if (!node.children) {" +
"\r\n                clickFun(node, parent, childs, \'employeeRightTree\');\r\n        " +
"    }\r\n            else {\r\n                $(this).tree(\"expand\", node);\r\n      " +
"      }\r\n        },\r\n        onLoadSuccess: function (node, data) {\r\n           " +
" regditEvent(data, \"employeeRightTree\");\r\n        }\r\n    });\r\n    JQ.form.submit" +
"Init({});\r\n\r\n    $(\"#treeSearch\").textbox({\r\n        buttonText: \'筛选\',\r\n        " +
"buttonIcon: \'fa fa-search\',\r\n        prompt: \'人员或部门\',\r\n        height: 25,\r\n    " +
"    onClickButton: function () {\r\n            var val = $(\"#treeSearch\").textbox" +
"(\"getValue\");\r\n            $(\"#employeeLeftTree\").tree(\"search\", val);\r\n        " +
"}\r\n    });\r\n\r\n    function isEmployee(id) {\r\n        var isok = false;\r\n        " +
"if (JQ.tools.isNotEmpty(id)) {\r\n            isok = id.toString().split(\'-\').leng" +
"th == 2 ? true : false;\r\n        }\r\n        return isok;\r\n    }\r\n\r\n\r\n    functio" +
"n regditEvent(data, treeid) {\r\n        if (JQ.tools.isNotEmpty(data)) {\r\n       " +
"     for (var i = 0; i < data.length; i++) {\r\n                var $c = $(\"#\" + d" +
"ata[i].domId),\r\n                    $t = $(\"#\" + treeid),\r\n                    n" +
"ode = $t.tree(\'find\', data[i].id),\r\n                    text,\r\n                 " +
"   icon;\r\n                $c.attr(\'jq-employeetree\', \"{id:\" + data[i].id + \",tex" +
"t:\'\" + data[i].text + \"\',treeid:\'\" + treeid + \"\'}\");\r\n                if (treeid" +
" == \'employeeLeftTree\') {\r\n                    text = \'选择\';\r\n                   " +
" icon = \'fa fa-check-circle\';\r\n                }\r\n                else {\r\n      " +
"              text = \'移除\';\r\n                    icon = \'fa fa-trash\';\r\n         " +
"       }\r\n               // if (!isEmployee(data[i].id)) {\r\n                    " +
"$(\"<a>\", {\r\n                        \'class\': icon,\r\n                        styl" +
"e: \'float:right;margin-right:10px;display:none;\',\r\n                        text:" +
" text,\r\n                        click: function (e) {\r\n                         " +
"   var j = eval(\"(\" + $(this).parent().attr(\"jq-employeetree\") + \")\"),\r\n        " +
"                        node = $t.tree(\'find\', j.id),\r\n                         " +
"       parent = $t.tree(\'getParent\', node.target),\r\n                            " +
"    childs = $t.tree(\'getChildren\', node.target);\r\n                            c" +
"lickFun(node, parent, childs, treeid);\r\n                            e.stopPropag" +
"ation();\r\n                        }\r\n                    }).appendTo($c);\r\n     " +
"           //}\r\n                if (JQ.tools.isNotEmpty(data[i].children)) {\r\n  " +
"                  regditEvent(data[i].children, treeid);\r\n                }\r\n   " +
"         }\r\n            $(\"div[jq-employeetree]\").hover(\r\n                  func" +
"tion (e) {\r\n                      var j = eval(\"(\" + $(this).attr(\'jq-employeetr" +
"ee\') + \")\");\r\n                      var isok = isEmployee(j.id);\r\n              " +
"        if (!isok) {\r\n                          $(this).find(\"[class=\'\" + icon +" +
" \"\']\").show(100);\r\n                      }\r\n\r\n                  },\r\n            " +
"      function (e) {\r\n                      var j = eval(\"(\" + $(this).attr(\'jq-" +
"employeetree\') + \")\");\r\n                      var isok = isEmployee(j.id);\r\n    " +
"                  if (!isok) {\r\n                          $(this).find(\"[class=\'" +
"\" + icon + \"\']\").hide(100);\r\n                      }\r\n                  }\r\n     " +
"       );\r\n        }\r\n    }\r\n\r\n    function clickFun(node, parent, childs, treei" +
"d) {\r\n        var $t = $(\"#\" + treeid),\r\n                  otherTreeid = treeid " +
"== \'employeeLeftTree\' ? \"employeeRightTree\" : \'employeeLeftTree\';\r\n        appen" +
"dNodes(node, parent, treeid, otherTreeid);\r\n        if (node.id == -1) {\r\n      " +
"      for (var i = 0; i < childs.length; i++) {\r\n                $t.tree(\"remove" +
"\", childs[i].target);\r\n            }\r\n        }\r\n        else {\r\n            $t." +
"tree(\"remove\", node.target);\r\n        }\r\n        if ((!parent.children || parent" +
".children.length <= 0) && parent.id != -1) {\r\n            $t.tree(\"remove\", pare" +
"nt.target);\r\n        }\r\n    }\r\n\r\n    function targetExpand(node, treeid) {\r\n    " +
"    var $t = $(\"#\" + treeid),\r\n            roots = $t.tree(\"getRoots\");\r\n       " +
" if (JQ.tools.isNotEmpty(roots)) {\r\n            for (var i = 0; i < roots.length" +
"; i++) {\r\n                if (roots[i].id != node.id) {\r\n                    $t." +
"tree(\"collapse\", roots[i].target);\r\n                }\r\n            }\r\n        }\r" +
"\n    }\r\n\r\n    function appendNodes(node, parent, treeid, appendTreeid) {\r\n      " +
"  var $t = $(\"#\" + treeid),\r\n            $at = $(\"#\" + appendTreeid),\r\n         " +
"   children = node.children,\r\n            root = $at.tree(\"getRoot\");\r\n        i" +
"f (!JQ.tools.isJson(parent)) {//说明是根节点\r\n            parent = $at.tree(\"getRoot\")" +
";\r\n        }\r\n        var fnroot = $at.tree(\'find\', parent.id);\r\n        if (!JQ" +
".tools.isJson(fnroot)) {\r\n            $at.tree(\'append\', {\r\n                pare" +
"nt: root.target,\r\n                data: { id: parent.id, text: parent.text }\r\n  " +
"          });\r\n            fnroot = $at.tree(\'find\', parent.id);\r\n        }\r\n\r\n " +
"       var fnnode = $at.tree(\'find\', node.id);\r\n        if (!JQ.tools.isJson(fnn" +
"ode)) {\r\n            $at.tree(\'append\', {\r\n                parent: fnroot.target" +
",\r\n                data: { id: node.id, text: node.text, iconCls: node.iconCls }" +
"\r\n            });\r\n        }\r\n        if (JQ.tools.isNotEmpty(children)) {\r\n    " +
"        for (var i = 0; i < children.length; i++) {\r\n                appendNodes" +
"(children[i], node, treeid, appendTreeid)\r\n            }\r\n        }\r\n        //f" +
"or (var i = 0; i < childs.length; i++) {\r\n\r\n        //}\r\n        //if (parent.id" +
" == -1) {//如果是根节点\r\n\r\n        //}\r\n        //if (!JQ.tools.isJson(root)) {//如果没有节" +
"点手点添加一个节点\r\n        //    $t.tree(\"loadData\", [{ id: parent.id, text: parent.text" +
", state: \"closed\" }]);\r\n        //    root = $t.tree(\"getRoot\");\r\n        //}\r\n " +
"       //var fn = findNode(parent, treeid);\r\n        //if (!JQ.tools.isJson(fn))" +
" {\r\n        //    $t.tree(\'insert\', {\r\n        //        before: root.target,\r\n " +
"       //        data: { id: parent.id, text: parent.text, state: \"closed\" }\r\n  " +
"      //    });\r\n        //    fn = $t.tree(\'find\', parent.id);\r\n        //}\r\n  " +
"      //for (var i = 0; i < childs.length; i++) {\r\n        //    $t.tree(\'append" +
"\', {\r\n        //        parent: fn.target,\r\n        //        data: [{ id: child" +
"s[i].id, text: childs[i].text }]\r\n        //    });\r\n        //};\r\n        //$t." +
"tree(\'expand\', fn.target);\r\n    };\r\n\r\n    function findNode(parent, treeid) {\r\n " +
"       var $t = $(\"#\" + treeid);\r\n        return $t.tree(\'find\', parent.id);\r\n  " +
"  }\r\n\r\n    function doSel() {\r\n        var $t = $(\'#employeeRightTree\'),\r\n      " +
"      root = $t.tree(\"getRoot\"),\r\n            childs = $t.tree(\"getChildren\", ro" +
"ot.target),\r\n            text = \'\',\r\n            ids = \'\',\r\n            parames " +
"= JQ.tools.findDialogInfo(),\r\n            $win;\r\n        if (JQ.tools.isNotEmpty" +
"(childs)) {\r\n            for (var i = 0; i < childs.length; i++) {\r\n            " +
"    if (JQ.tools.isNotEmpty(childs[i].id) && childs[i].id.toString().split(\'-\')." +
"length == 2) {\r\n                    var id = childs[i].id.split(\'-\')[0];\r\n      " +
"              text += (JQ.tools.isNotEmpty(text) ? \",\" + childs[i].text : childs" +
"[i].text);\r\n                    ids += (JQ.tools.isNotEmpty(ids) ? \",\" + id : id" +
");\r\n                }\r\n            }\r\n        }\r\n        if (JQ.tools.isNotEmpty" +
"(parames.iframeID)) {\r\n\r\n            $win = window.top.document.getElementById(p" +
"arames.iframeID).contentWindow;\r\n            $win.$(\"#");

            
            #line 393 "..\..\Views\usercontrol\selEmployee.cshtml"
                Write(Model.id);

            
            #line default
            #line hidden
WriteLiteral("\").textbox(\"setValue\", text);\r\n            $win.$(\"#");

            
            #line 394 "..\..\Views\usercontrol\selEmployee.cshtml"
                Write(Model.setID);

            
            #line default
            #line hidden
WriteLiteral("\").val(ids);\r\n        }\r\n        else if (JQ.tools.isNotEmpty(parames.parentid)) " +
"{\r\n            $win = window.top.$(\"#\" + parames.parentid);\r\n            $win.fi" +
"nd(\"#");

            
            #line 398 "..\..\Views\usercontrol\selEmployee.cshtml"
                   Write(Model.id);

            
            #line default
            #line hidden
WriteLiteral("\").textbox(\"setValue\", text);\r\n            $win.find(\"#");

            
            #line 399 "..\..\Views\usercontrol\selEmployee.cshtml"
                   Write(Model.setID);

            
            #line default
            #line hidden
WriteLiteral("\").val(ids);\r\n        }\r\n        else {\r\n            $win = window.top;\r\n        " +
"    $win.find(\"#");

            
            #line 403 "..\..\Views\usercontrol\selEmployee.cshtml"
                   Write(Model.id);

            
            #line default
            #line hidden
WriteLiteral("\").textbox(\"setValue\", text);\r\n            $win.find(\"#");

            
            #line 404 "..\..\Views\usercontrol\selEmployee.cshtml"
                   Write(Model.setID);

            
            #line default
            #line hidden
WriteLiteral("\").val(ids);\r\n        }\r\n\r\n        JQ.dialog.dialogClose();//关闭窗体放在最后一步执行，以避免找不到事" +
"件源\r\n    }\r\n</script>\r\n<div");

WriteLiteral(" JQPanel=\"dialogButtonPanel\"");

WriteLiteral(">\r\n    <input");

WriteLiteral(" id=\"treeSearch\"");

WriteLiteral(" style=\"width:230px;\"");

WriteLiteral(" />\r\n    <a");

WriteLiteral(" class=\"easyui-linkbutton\"");

WriteLiteral(" data-options=\"plain:true,iconCls:\'fa fa-search\'\"");

WriteLiteral(" onclick=\"doSel()\"");

WriteLiteral(">确定</a>\r\n</div>\r\n<div");

WriteLiteral(" id=\"cc\"");

WriteLiteral(" class=\"easyui-layout\"");

WriteLiteral(" style=\"overflow: hidden\"");

WriteLiteral(" fit=\"true\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" data-options=\"region:\'west\',split:false\"");

WriteLiteral(" style=\"width:220px;\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" id=\"employeeLeftTree\"");

WriteLiteral("></ul>\r\n    </div>\r\n    <div");

WriteLiteral(" data-options=\"region:\'center\'\"");

WriteLiteral(" style=\"background:#eee;\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" id=\"employeeRightTree\"");

WriteLiteral("></ul>\r\n    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
