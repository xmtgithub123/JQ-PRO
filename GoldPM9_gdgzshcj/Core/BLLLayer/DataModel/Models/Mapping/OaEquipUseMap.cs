#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class OaEquipUseMap : EntityTypeConfiguration<OaEquipUse>
    {
        public OaEquipUseMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.EquipLendDate).IsRequired();
	  
			this.Property(t => t.EquipLendNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.EquipOrOffice).IsRequired();
	  
			this.Property(t => t.EquipBackDate).IsRequired();
	  
			this.Property(t => t.EquipBackEmpId).IsRequired();
	  
			this.Property(t => t.EquipBackEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.EquipBackEmpDeptId).IsRequired();
	  
			this.Property(t => t.EquipBackEmpDeptName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();


			 // Table & Column Mappings
			this.ToTable("OaEquipUse");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.EquipLendDate).HasColumnName("EquipLendDate");
			this.Property(t => t.EquipLendNote).HasColumnName("EquipLendNote");
			this.Property(t => t.EquipOrOffice).HasColumnName("EquipOrOffice");
			this.Property(t => t.EquipBackDate).HasColumnName("EquipBackDate");
			this.Property(t => t.EquipBackEmpId).HasColumnName("EquipBackEmpId");
			this.Property(t => t.EquipBackEmpName).HasColumnName("EquipBackEmpName");
			this.Property(t => t.EquipBackEmpDeptId).HasColumnName("EquipBackEmpDeptId");
			this.Property(t => t.EquipBackEmpDeptName).HasColumnName("EquipBackEmpDeptName");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			           
			#region Relationships
			#endregion
        }
    }
}  
