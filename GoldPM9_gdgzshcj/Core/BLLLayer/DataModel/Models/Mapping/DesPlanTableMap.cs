#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class DesPlanTableMap : EntityTypeConfiguration<DesPlanTable>
    {
        public DesPlanTableMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.ProjId).IsRequired();
	  
			this.Property(t => t.PhaseId).IsRequired();
	  
			this.Property(t => t.TaskGroupId).IsRequired();
	  
			this.Property(t => t.DesignBasis).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.DesignScope).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.DesignProduct).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.OtherDescription).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.DesignInput).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.DesignPrinciple).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.QualityParget).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.QualityAssurance).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.DangerType).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.DangerAction).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.EmergencyType).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.EmergencyAction).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.PlanStatus).IsRequired();
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);


			 // Table & Column Mappings
			this.ToTable("DesPlanTable");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.ProjId).HasColumnName("ProjId");
			this.Property(t => t.PhaseId).HasColumnName("PhaseId");
			this.Property(t => t.TaskGroupId).HasColumnName("TaskGroupId");
			this.Property(t => t.DesignBasis).HasColumnName("DesignBasis");
			this.Property(t => t.DesignScope).HasColumnName("DesignScope");
			this.Property(t => t.DesignProduct).HasColumnName("DesignProduct");
			this.Property(t => t.OtherDescription).HasColumnName("OtherDescription");
			this.Property(t => t.DesignInput).HasColumnName("DesignInput");
			this.Property(t => t.DesignPrinciple).HasColumnName("DesignPrinciple");
			this.Property(t => t.QualityParget).HasColumnName("QualityParget");
			this.Property(t => t.QualityAssurance).HasColumnName("QualityAssurance");
			this.Property(t => t.DangerType).HasColumnName("DangerType");
			this.Property(t => t.DangerAction).HasColumnName("DangerAction");
			this.Property(t => t.EmergencyType).HasColumnName("EmergencyType");
			this.Property(t => t.EmergencyAction).HasColumnName("EmergencyAction");
			this.Property(t => t.PlanStatus).HasColumnName("PlanStatus");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			           
			#region Relationships
			#endregion
        }
    }
}  
