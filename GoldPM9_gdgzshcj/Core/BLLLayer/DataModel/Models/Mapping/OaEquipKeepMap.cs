#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2017-03-15 11:29:53
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class OaEquipKeepMap : EntityTypeConfiguration<OaEquipKeep>
    {
        public OaEquipKeepMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.EquipID).IsRequired();
	  
			this.Property(t => t.RepairMeoney).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.RepairDate).IsRequired();
	  
			this.Property(t => t.RepairNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.RepairReportEmpId).IsRequired();
	  
			this.Property(t => t.RepairFlowEmpId).IsRequired();
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.FixDate).IsRequired();



			 // Table & Column Mappings
			this.ToTable("OaEquipKeep");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.EquipID).HasColumnName("EquipID");
			this.Property(t => t.RepairMeoney).HasColumnName("RepairMeoney");
			this.Property(t => t.RepairDate).HasColumnName("RepairDate");
			this.Property(t => t.RepairNote).HasColumnName("RepairNote");
			this.Property(t => t.RepairReportEmpId).HasColumnName("RepairReportEmpId");
			this.Property(t => t.RepairFlowEmpId).HasColumnName("RepairFlowEmpId");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
            this.Property(t => t.FixDate).HasColumnName("FixDate");
			           
			#region Relationships
            this.HasRequired(t => t.FK_OaEquipKeep_EquipID).WithMany(t => t.FK_OaEquipKeep_EquipID).HasForeignKey(d => d.EquipID);
			#endregion
        }
    }
}  
