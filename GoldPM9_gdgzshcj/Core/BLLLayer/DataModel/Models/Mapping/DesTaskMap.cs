#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2017-02-27 13:52:45
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class DesTaskMap : EntityTypeConfiguration<DesTask>
    {
        public DesTaskMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepID).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpId).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenLastModifierEmpId).IsRequired();
	  
			this.Property(t => t.AgenLastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenDeleterEmpId).IsRequired();
	  
			this.Property(t => t.AgenDeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ProjId).IsRequired();
	  
			this.Property(t => t.TaskPhaseId).IsRequired();
	  
			this.Property(t => t.TaskSpecId).IsRequired();
	  
			this.Property(t => t.TaskGroupId).IsRequired();
	  
			this.Property(t => t.TaskName).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.TaskParentId).IsRequired();
	  
			this.Property(t => t.TaskLevel).IsRequired();
	  
			this.Property(t => t.TaskOrderNum).IsRequired();
	  
			this.Property(t => t.TaskPath).IsRequired().HasMaxLength(8000);
	  
			this.Property(t => t.TaskPathIds).IsRequired().HasMaxLength(8000);
	  
			this.Property(t => t.TaskEmpID).IsRequired();
	  
			this.Property(t => t.TaskEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.TaskAgenEmpID).IsRequired();
	  
			this.Property(t => t.TaskAgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DatePlanStart).IsRequired();
	  
			this.Property(t => t.DatePlanFinish).IsRequired();
	  
			this.Property(t => t.DateActualStart).IsRequired();
	  
			this.Property(t => t.DateActualFinish).IsRequired();
	  
			this.Property(t => t.TaskJoinEmpIds).IsRequired().HasMaxLength(8000);
	  
			this.Property(t => t.TaskType).IsRequired();
	  
			this.Property(t => t.TaskLevelType).IsRequired();
	  
			this.Property(t => t.TaskPriority).IsRequired();
	  
			this.Property(t => t.TaskStatus).IsRequired();
	  
			this.Property(t => t.TaskJudge).IsRequired();
	  
			this.Property(t => t.TaskNote).IsRequired();
	  
			this.Property(t => t.FlowId).IsRequired();
	  
			this.Property(t => t.TaskFlowModel).IsRequired();
	  
			this.Property(t => t.ColAttXml).IsRequired();
	  
			this.Property(t => t.TaskNextFlowNodeId).IsRequired();
	  
			this.Property(t => t.TaskNextFlowModel).IsRequired();
	  
			this.Property(t => t.DateForPrint).IsRequired();
	  
			this.Property(t => t.DateForPublish).IsRequired();
	  
			this.Property(t => t.DateForArchive).IsRequired();
	  
			this.Property(t => t.TaskNumber).IsRequired().HasMaxLength(2000);


			 // Table & Column Mappings
			this.ToTable("DesTask");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepID).HasColumnName("CreatorDepID");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.AgenCreatorEmpId).HasColumnName("AgenCreatorEmpId");
			this.Property(t => t.AgenCreatorEmpName).HasColumnName("AgenCreatorEmpName");
			this.Property(t => t.AgenLastModifierEmpId).HasColumnName("AgenLastModifierEmpId");
			this.Property(t => t.AgenLastModifierEmpName).HasColumnName("AgenLastModifierEmpName");
			this.Property(t => t.AgenDeleterEmpId).HasColumnName("AgenDeleterEmpId");
			this.Property(t => t.AgenDeleterEmpName).HasColumnName("AgenDeleterEmpName");
			this.Property(t => t.ProjId).HasColumnName("ProjId");
			this.Property(t => t.TaskPhaseId).HasColumnName("TaskPhaseId");
			this.Property(t => t.TaskSpecId).HasColumnName("TaskSpecId");
			this.Property(t => t.TaskGroupId).HasColumnName("TaskGroupId");
			this.Property(t => t.TaskName).HasColumnName("TaskName");
			this.Property(t => t.TaskParentId).HasColumnName("TaskParentId");
			this.Property(t => t.TaskLevel).HasColumnName("TaskLevel");
			this.Property(t => t.TaskOrderNum).HasColumnName("TaskOrderNum");
			this.Property(t => t.TaskPath).HasColumnName("TaskPath");
			this.Property(t => t.TaskPathIds).HasColumnName("TaskPathIds");
			this.Property(t => t.TaskEmpID).HasColumnName("TaskEmpID");
			this.Property(t => t.TaskEmpName).HasColumnName("TaskEmpName");
			this.Property(t => t.TaskAgenEmpID).HasColumnName("TaskAgenEmpID");
			this.Property(t => t.TaskAgenEmpName).HasColumnName("TaskAgenEmpName");
			this.Property(t => t.DatePlanStart).HasColumnName("DatePlanStart");
			this.Property(t => t.DatePlanFinish).HasColumnName("DatePlanFinish");
			this.Property(t => t.DateActualStart).HasColumnName("DateActualStart");
			this.Property(t => t.DateActualFinish).HasColumnName("DateActualFinish");
			this.Property(t => t.TaskJoinEmpIds).HasColumnName("TaskJoinEmpIds");
			this.Property(t => t.TaskType).HasColumnName("TaskType");
			this.Property(t => t.TaskLevelType).HasColumnName("TaskLevelType");
			this.Property(t => t.TaskPriority).HasColumnName("TaskPriority");
			this.Property(t => t.TaskStatus).HasColumnName("TaskStatus");
			this.Property(t => t.TaskJudge).HasColumnName("TaskJudge");
			this.Property(t => t.TaskNote).HasColumnName("TaskNote");
			this.Property(t => t.FlowId).HasColumnName("FlowId");
			this.Property(t => t.TaskFlowModel).HasColumnName("TaskFlowModel");
			this.Property(t => t.ColAttXml).HasColumnName("ColAttXml");
			this.Property(t => t.TaskNextFlowNodeId).HasColumnName("TaskNextFlowNodeId");
			this.Property(t => t.TaskNextFlowModel).HasColumnName("TaskNextFlowModel");
			this.Property(t => t.DateForPrint).HasColumnName("DateForPrint");
			this.Property(t => t.DateForPublish).HasColumnName("DateForPublish");
			this.Property(t => t.DateForArchive).HasColumnName("DateForArchive");
			this.Property(t => t.TaskNumber).HasColumnName("TaskNumber");
			           
			#region Relationships
			#endregion
        }
    }
}  
