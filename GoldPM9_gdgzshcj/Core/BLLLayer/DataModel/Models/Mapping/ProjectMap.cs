#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-11-01 10:26:23
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class ProjectMap : EntityTypeConfiguration<Project>
    {
        public ProjectMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.ProjNumber).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.ProjName).IsRequired().HasMaxLength(4000);
	  
			this.Property(t => t.ProjNote).IsRequired().HasMaxLength(4000);
	  
			this.Property(t => t.ParentId).IsRequired();
	  
			this.Property(t => t.DateCreate).IsRequired();
	  
			this.Property(t => t.DatePlanStart).IsRequired();
	  
			this.Property(t => t.DatePlanFinish).IsRequired();
	  
			this.Property(t => t.DatePlanDeliver).IsRequired();
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.ProjTaskContent).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.ProjDemand).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.ProjNoteOther).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.CustID).IsRequired();
	  
			this.Property(t => t.CustName).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.CustLinkMan).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CustLinkTel).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CustLinkWeb).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ProjStatus).IsRequired();
	  
			this.Property(t => t.ProjTypeID).IsRequired();
	  
			this.Property(t => t.ProjTaskSource).IsRequired();
	  
			this.Property(t => t.ProjAreaID).IsRequired();
	  
			this.Property(t => t.ProjPropertyID).IsRequired();
	  
			this.Property(t => t.ProjVoltID).IsRequired();
	  
			this.Property(t => t.ProjPhaseIds).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ProjPhaseInfo).IsRequired().HasMaxLength(4000);
	  
			this.Property(t => t.ProjDepId).IsRequired();
	  
			this.Property(t => t.ProjJoinDepIds).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ProjFeeSource).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.ProjGradeID).IsRequired();
	  
			this.Property(t => t.TaskBasisName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.TaskBasisNumber).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ProjEmpId).IsRequired();
	  
			this.Property(t => t.ProjEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ProjFee).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.ColAttType1).IsRequired();
	  
			this.Property(t => t.ColAttType2).IsRequired();
	  
			this.Property(t => t.ColAttType3).IsRequired();
	  
			this.Property(t => t.ColAttType4).IsRequired();
	  
			this.Property(t => t.ColAttType5).IsRequired();
	  
			this.Property(t => t.ColAttType6).IsRequired();
	  
			this.Property(t => t.ColAttType7).IsRequired();
	  
			this.Property(t => t.ColAttType8).IsRequired();
	  
			this.Property(t => t.ColAttType9).IsRequired();
	  
			this.Property(t => t.ColAttType10).IsRequired();
	  
			this.Property(t => t.ColAttType11).IsRequired();
	  
			this.Property(t => t.ColAttVal1).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.ColAttVal2).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal3).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal4).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal5).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttDate1).IsRequired();
	  
			this.Property(t => t.ColAttDate2).IsRequired();
	  
			this.Property(t => t.ColAttDate3).IsRequired();
	  
			this.Property(t => t.ColAttDate4).IsRequired();
	  
			this.Property(t => t.ColAttDate5).IsRequired();
	  
			this.Property(t => t.ColAttXml).IsRequired();
	  
			this.Property(t => t.ProjBanlanceFee).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ProjBanlanceStatus).IsRequired();
	  
			this.Property(t => t.BridgeGuid).IsRequired();
	  
			this.Property(t => t.IsQuote).IsRequired();
	  
			this.Property(t => t.BridgeFact).IsRequired();

            this.Property(t => t.CompanyID).IsRequired();

            this.Property(t => t.FProjEmpId).IsRequired();

            this.Property(t => t.FProjEmpName).IsRequired().HasMaxLength(100);

            // Table & Column Mappings
            this.ToTable("Project");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.ProjNumber).HasColumnName("ProjNumber");
			this.Property(t => t.ProjName).HasColumnName("ProjName");
			this.Property(t => t.ProjNote).HasColumnName("ProjNote");
			this.Property(t => t.ParentId).HasColumnName("ParentId");
			this.Property(t => t.DateCreate).HasColumnName("DateCreate");
			this.Property(t => t.DatePlanStart).HasColumnName("DatePlanStart");
			this.Property(t => t.DatePlanFinish).HasColumnName("DatePlanFinish");
			this.Property(t => t.DatePlanDeliver).HasColumnName("DatePlanDeliver");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.ProjTaskContent).HasColumnName("ProjTaskContent");
			this.Property(t => t.ProjDemand).HasColumnName("ProjDemand");
			this.Property(t => t.ProjNoteOther).HasColumnName("ProjNoteOther");
			this.Property(t => t.CustID).HasColumnName("CustID");
			this.Property(t => t.CustName).HasColumnName("CustName");
			this.Property(t => t.CustLinkMan).HasColumnName("CustLinkMan");
			this.Property(t => t.CustLinkTel).HasColumnName("CustLinkTel");
			this.Property(t => t.CustLinkWeb).HasColumnName("CustLinkWeb");
			this.Property(t => t.ProjStatus).HasColumnName("ProjStatus");
			this.Property(t => t.ProjTypeID).HasColumnName("ProjTypeID");
			this.Property(t => t.ProjTaskSource).HasColumnName("ProjTaskSource");
			this.Property(t => t.ProjAreaID).HasColumnName("ProjAreaID");
			this.Property(t => t.ProjPropertyID).HasColumnName("ProjPropertyID");
			this.Property(t => t.ProjVoltID).HasColumnName("ProjVoltID");
			this.Property(t => t.ProjPhaseIds).HasColumnName("ProjPhaseIds");
			this.Property(t => t.ProjPhaseInfo).HasColumnName("ProjPhaseInfo");
			this.Property(t => t.ProjDepId).HasColumnName("ProjDepId");
			this.Property(t => t.ProjJoinDepIds).HasColumnName("ProjJoinDepIds");
			this.Property(t => t.ProjFeeSource).HasColumnName("ProjFeeSource");
			this.Property(t => t.ProjGradeID).HasColumnName("ProjGradeID");
			this.Property(t => t.TaskBasisName).HasColumnName("TaskBasisName");
			this.Property(t => t.TaskBasisNumber).HasColumnName("TaskBasisNumber");
			this.Property(t => t.ProjEmpId).HasColumnName("ProjEmpId");
			this.Property(t => t.ProjEmpName).HasColumnName("ProjEmpName");
			this.Property(t => t.ProjFee).HasColumnName("ProjFee");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.ColAttType1).HasColumnName("ColAttType1");
			this.Property(t => t.ColAttType2).HasColumnName("ColAttType2");
			this.Property(t => t.ColAttType3).HasColumnName("ColAttType3");
			this.Property(t => t.ColAttType4).HasColumnName("ColAttType4");
			this.Property(t => t.ColAttType5).HasColumnName("ColAttType5");
			this.Property(t => t.ColAttType6).HasColumnName("ColAttType6");
			this.Property(t => t.ColAttType7).HasColumnName("ColAttType7");
			this.Property(t => t.ColAttType8).HasColumnName("ColAttType8");
			this.Property(t => t.ColAttType9).HasColumnName("ColAttType9");
			this.Property(t => t.ColAttType10).HasColumnName("ColAttType10");
			this.Property(t => t.ColAttType11).HasColumnName("ColAttType11");
			this.Property(t => t.ColAttVal1).HasColumnName("ColAttVal1");
			this.Property(t => t.ColAttVal2).HasColumnName("ColAttVal2");
			this.Property(t => t.ColAttVal3).HasColumnName("ColAttVal3");
			this.Property(t => t.ColAttVal4).HasColumnName("ColAttVal4");
			this.Property(t => t.ColAttVal5).HasColumnName("ColAttVal5");
			this.Property(t => t.ColAttDate1).HasColumnName("ColAttDate1");
			this.Property(t => t.ColAttDate2).HasColumnName("ColAttDate2");
			this.Property(t => t.ColAttDate3).HasColumnName("ColAttDate3");
			this.Property(t => t.ColAttDate4).HasColumnName("ColAttDate4");
			this.Property(t => t.ColAttDate5).HasColumnName("ColAttDate5");
			this.Property(t => t.ColAttXml).HasColumnName("ColAttXml");
			this.Property(t => t.ProjBanlanceFee).HasColumnName("ProjBanlanceFee");
			this.Property(t => t.ProjBanlanceStatus).HasColumnName("ProjBanlanceStatus");
			this.Property(t => t.BridgeGuid).HasColumnName("BridgeGuid");
			this.Property(t => t.IsQuote).HasColumnName("IsQuote");
			this.Property(t => t.BridgeFact).HasColumnName("BridgeFact");
            this.Property(t => t.CompanyID).HasColumnName("CompanyID");
            this.Property(t => t.FProjEmpId).HasColumnName("FProjEmpId");
            this.Property(t => t.FProjEmpName).HasColumnName("FProjEmpName");


            #region Relationships
            this.HasRequired(t => t.FK_Project_ProjAreaID).WithMany(t => t.FK_Project_ProjAreaID).HasForeignKey(d => d.ProjAreaID);
			this.HasRequired(t => t.FK_Project_ProjDepId).WithMany(t => t.FK_Project_ProjDepId).HasForeignKey(d => d.ProjDepId);
			this.HasRequired(t => t.FK_Project_ProjGradeID).WithMany(t => t.FK_Project_ProjGradeID).HasForeignKey(d => d.ProjGradeID);
			this.HasRequired(t => t.FK_Project_ProjPropertyID).WithMany(t => t.FK_Project_ProjPropertyID).HasForeignKey(d => d.ProjPropertyID);
			this.HasRequired(t => t.FK_Project_ProjStatus).WithMany(t => t.FK_Project_ProjStatus).HasForeignKey(d => d.ProjStatus);
			this.HasRequired(t => t.FK_Project_ProjTaskSource).WithMany(t => t.FK_Project_ProjTaskSource).HasForeignKey(d => d.ProjTaskSource);
			this.HasRequired(t => t.FK_Project_ProjTypeID).WithMany(t => t.FK_Project_ProjTypeID).HasForeignKey(d => d.ProjTypeID);
			this.HasRequired(t => t.FK_Project_ProjVoltID).WithMany(t => t.FK_Project_ProjVoltID).HasForeignKey(d => d.ProjVoltID);
			#endregion
        }
    }
}  
