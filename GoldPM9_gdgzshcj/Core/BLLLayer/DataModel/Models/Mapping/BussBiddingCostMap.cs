#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class BussBiddingCostMap : EntityTypeConfiguration<BussBiddingCost>
    {
        public BussBiddingCostMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.BussBiddingInfoID).IsRequired();
	  
			this.Property(t => t.BussBiddingInfoPackageID).IsRequired();
	  
			this.Property(t => t.TenderFee).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.TenderFeePayTime).IsRequired();
	  
			this.Property(t => t.TenderAgentFee).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.TenderAgentFeePayTime).IsRequired();
	  
			this.Property(t => t.BidBondPay).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.BidBondPayTime).IsRequired();
	  
			this.Property(t => t.BidBondBack).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.BidBondBackTime).IsRequired();
	  
			this.Property(t => t.PerformanceBondPay).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.PerformanceBondPayTime).IsRequired();
	  
			this.Property(t => t.PerformanceBondBack).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.PerformanceBondBackTime).IsRequired();
	  
			this.Property(t => t.CostNote).IsRequired().HasMaxLength(2000);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpId).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenLastModifierEmpId).IsRequired();
	  
			this.Property(t => t.AgenLastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenDeleterEmpId).IsRequired();
	  
			this.Property(t => t.AgenDeleterEmpName).IsRequired().HasMaxLength(50);


			 // Table & Column Mappings
			this.ToTable("BussBiddingCost");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.BussBiddingInfoID).HasColumnName("BussBiddingInfoID");
			this.Property(t => t.BussBiddingInfoPackageID).HasColumnName("BussBiddingInfoPackageID");
			this.Property(t => t.TenderFee).HasColumnName("TenderFee");
			this.Property(t => t.TenderFeePayTime).HasColumnName("TenderFeePayTime");
			this.Property(t => t.TenderAgentFee).HasColumnName("TenderAgentFee");
			this.Property(t => t.TenderAgentFeePayTime).HasColumnName("TenderAgentFeePayTime");
			this.Property(t => t.BidBondPay).HasColumnName("BidBondPay");
			this.Property(t => t.BidBondPayTime).HasColumnName("BidBondPayTime");
			this.Property(t => t.BidBondBack).HasColumnName("BidBondBack");
			this.Property(t => t.BidBondBackTime).HasColumnName("BidBondBackTime");
			this.Property(t => t.PerformanceBondPay).HasColumnName("PerformanceBondPay");
			this.Property(t => t.PerformanceBondPayTime).HasColumnName("PerformanceBondPayTime");
			this.Property(t => t.PerformanceBondBack).HasColumnName("PerformanceBondBack");
			this.Property(t => t.PerformanceBondBackTime).HasColumnName("PerformanceBondBackTime");
			this.Property(t => t.CostNote).HasColumnName("CostNote");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.AgenCreatorEmpId).HasColumnName("AgenCreatorEmpId");
			this.Property(t => t.AgenCreatorEmpName).HasColumnName("AgenCreatorEmpName");
			this.Property(t => t.AgenLastModifierEmpId).HasColumnName("AgenLastModifierEmpId");
			this.Property(t => t.AgenLastModifierEmpName).HasColumnName("AgenLastModifierEmpName");
			this.Property(t => t.AgenDeleterEmpId).HasColumnName("AgenDeleterEmpId");
			this.Property(t => t.AgenDeleterEmpName).HasColumnName("AgenDeleterEmpName");
			           
			#region Relationships
			this.HasRequired(t => t.FK_BussBiddingCost_BussBiddingInfoID).WithMany(t => t.FK_BussBiddingCost_BussBiddingInfoID).HasForeignKey(d => d.BussBiddingInfoID);
			this.HasRequired(t => t.FK_BussBiddingCost_BussBiddingInfoPackageID).WithMany(t => t.FK_BussBiddingCost_BussBiddingInfoPackageID).HasForeignKey(d => d.BussBiddingInfoPackageID);
			#endregion
        }
    }
}  
