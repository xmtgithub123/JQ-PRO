#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class BussContractSubMap : EntityTypeConfiguration<BussContractSub>
    {
        public BussContractSubMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.ConSubNumber).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.ConSubName).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.ConSubDate).IsRequired();
	  
			this.Property(t => t.ConIsFeeFinished).IsRequired();
	  
			this.Property(t => t.ConSubStatus).IsRequired();
	  
			this.Property(t => t.ConSubFee).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.ConSubType).IsRequired();
	  
			this.Property(t => t.ConSubCategory).IsRequired();
	  
			this.Property(t => t.ConSubCustId).IsRequired();
	  
			this.Property(t => t.ConID).IsRequired();
	  
			this.Property(t => t.ConSubNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.Condition).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.ArchNumber).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreateEmpId).IsRequired();
	  
			this.Property(t => t.CreateDate).IsRequired();
	  
			this.Property(t => t.ColAttType1).IsRequired();
	  
			this.Property(t => t.ColAttType2).IsRequired();
	  
			this.Property(t => t.ColAttType3).IsRequired();
	  
			this.Property(t => t.ColAttType4).IsRequired();
	  
			this.Property(t => t.ColAttType5).IsRequired();
	  
			this.Property(t => t.ColAttVal1).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal2).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal3).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal4).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal5).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttDate1).IsRequired();
	  
			this.Property(t => t.ColAttDate2).IsRequired();
	  
			this.Property(t => t.ColAttDate3).IsRequired();
	  
			this.Property(t => t.ColAttDate4).IsRequired();
	  
			this.Property(t => t.ColAttDate5).IsRequired();
	  
			this.Property(t => t.ColAttFloat1).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ColAttFloat2).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ColAttFloat3).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ColAttFloat4).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ColAttFloat5).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();

            this.Property(t => t.CompanyID).IsRequired();


			 // Table & Column Mappings
			this.ToTable("BussContractSub");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.ConSubNumber).HasColumnName("ConSubNumber");
			this.Property(t => t.ConSubName).HasColumnName("ConSubName");
			this.Property(t => t.ConSubDate).HasColumnName("ConSubDate");
			this.Property(t => t.ConIsFeeFinished).HasColumnName("ConIsFeeFinished");
			this.Property(t => t.ConSubStatus).HasColumnName("ConSubStatus");
			this.Property(t => t.ConSubFee).HasColumnName("ConSubFee");
			this.Property(t => t.ConSubType).HasColumnName("ConSubType");
			this.Property(t => t.ConSubCategory).HasColumnName("ConSubCategory");
			this.Property(t => t.ConSubCustId).HasColumnName("ConSubCustId");
			this.Property(t => t.ConID).HasColumnName("ConID");
			this.Property(t => t.ConSubNote).HasColumnName("ConSubNote");
			this.Property(t => t.Condition).HasColumnName("Condition");
			this.Property(t => t.ArchNumber).HasColumnName("ArchNumber");
			this.Property(t => t.CreateEmpId).HasColumnName("CreateEmpId");
			this.Property(t => t.CreateDate).HasColumnName("CreateDate");
			this.Property(t => t.ColAttType1).HasColumnName("ColAttType1");
			this.Property(t => t.ColAttType2).HasColumnName("ColAttType2");
			this.Property(t => t.ColAttType3).HasColumnName("ColAttType3");
			this.Property(t => t.ColAttType4).HasColumnName("ColAttType4");
			this.Property(t => t.ColAttType5).HasColumnName("ColAttType5");
			this.Property(t => t.ColAttVal1).HasColumnName("ColAttVal1");
			this.Property(t => t.ColAttVal2).HasColumnName("ColAttVal2");
			this.Property(t => t.ColAttVal3).HasColumnName("ColAttVal3");
			this.Property(t => t.ColAttVal4).HasColumnName("ColAttVal4");
			this.Property(t => t.ColAttVal5).HasColumnName("ColAttVal5");
			this.Property(t => t.ColAttDate1).HasColumnName("ColAttDate1");
			this.Property(t => t.ColAttDate2).HasColumnName("ColAttDate2");
			this.Property(t => t.ColAttDate3).HasColumnName("ColAttDate3");
			this.Property(t => t.ColAttDate4).HasColumnName("ColAttDate4");
			this.Property(t => t.ColAttDate5).HasColumnName("ColAttDate5");
			this.Property(t => t.ColAttFloat1).HasColumnName("ColAttFloat1");
			this.Property(t => t.ColAttFloat2).HasColumnName("ColAttFloat2");
			this.Property(t => t.ColAttFloat3).HasColumnName("ColAttFloat3");
			this.Property(t => t.ColAttFloat4).HasColumnName("ColAttFloat4");
			this.Property(t => t.ColAttFloat5).HasColumnName("ColAttFloat5");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
            this.Property(t => t.CompanyID).HasColumnName("CompanyID");
			           
			#region Relationships
			this.HasRequired(t => t.FK_BussContractSub_ConID).WithMany(t => t.FK_BussContractSub_ConID).HasForeignKey(d => d.ConID);
			this.HasRequired(t => t.FK_BussContractSub_ConSubCategory).WithMany(t => t.FK_BussContractSub_ConSubCategory).HasForeignKey(d => d.ConSubCategory);
			this.HasRequired(t => t.FK_BussContractSub_ConSubCustId).WithMany(t => t.FK_BussContractSub_ConSubCustId).HasForeignKey(d => d.ConSubCustId);
			this.HasRequired(t => t.FK_BussContractSub_ConSubStatus).WithMany(t => t.FK_BussContractSub_ConSubStatus).HasForeignKey(d => d.ConSubStatus);
			this.HasRequired(t => t.FK_BussContractSub_ConSubType).WithMany(t => t.FK_BussContractSub_ConSubType).HasForeignKey(d => d.ConSubType);
			#endregion
        }
    }
}  
