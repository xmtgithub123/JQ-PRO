#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class DesFlowNodeMap : EntityTypeConfiguration<DesFlowNode>
    {
        public DesFlowNodeMap()
        {
			this.HasKey(t => new { t.ID}); 
				  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepID).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpId).IsRequired();
	  
			this.Property(t => t.AgenCreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenLastModifierEmpId).IsRequired();
	  
			this.Property(t => t.AgenLastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenDeleterEmpId).IsRequired();
	  
			this.Property(t => t.AgenDeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowNodeName).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.FlowNodeOrderNum).IsRequired();
	  
			this.Property(t => t.FlowNodeTypeID).IsRequired();
	  
			this.Property(t => t.FlowNodeNextID).IsRequired();
	  
			this.Property(t => t.FlowNodeBackIDs).IsRequired().HasMaxLength(8000);
	  
			this.Property(t => t.FlowNodeEmpIDs).IsRequired().HasMaxLength(8000);
	  
			this.Property(t => t.FlowNodeEmpType).IsRequired();
	  
			this.Property(t => t.CanEdit).IsRequired();
	  
			this.Property(t => t.CanDelete).IsRequired();
	  
			this.Property(t => t.FlowNodeEmpID).IsRequired();
	  
			this.Property(t => t.FlowNodeEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowNodeStatus).IsRequired();


			 // Table & Column Mappings
			this.ToTable("DesFlowNode");
			this.Property(t => t.ID).HasColumnName("ID");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepID).HasColumnName("CreatorDepID");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.AgenCreatorEmpId).HasColumnName("AgenCreatorEmpId");
			this.Property(t => t.AgenCreatorEmpName).HasColumnName("AgenCreatorEmpName");
			this.Property(t => t.AgenLastModifierEmpId).HasColumnName("AgenLastModifierEmpId");
			this.Property(t => t.AgenLastModifierEmpName).HasColumnName("AgenLastModifierEmpName");
			this.Property(t => t.AgenDeleterEmpId).HasColumnName("AgenDeleterEmpId");
			this.Property(t => t.AgenDeleterEmpName).HasColumnName("AgenDeleterEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowNodeName).HasColumnName("FlowNodeName");
			this.Property(t => t.FlowNodeOrderNum).HasColumnName("FlowNodeOrderNum");
			this.Property(t => t.FlowNodeTypeID).HasColumnName("FlowNodeTypeID");
			this.Property(t => t.FlowNodeNextID).HasColumnName("FlowNodeNextID");
			this.Property(t => t.FlowNodeBackIDs).HasColumnName("FlowNodeBackIDs");
			this.Property(t => t.FlowNodeEmpIDs).HasColumnName("FlowNodeEmpIDs");
			this.Property(t => t.FlowNodeEmpType).HasColumnName("FlowNodeEmpType");
			this.Property(t => t.CanEdit).HasColumnName("CanEdit");
			this.Property(t => t.CanDelete).HasColumnName("CanDelete");
			this.Property(t => t.FlowNodeEmpID).HasColumnName("FlowNodeEmpID");
			this.Property(t => t.FlowNodeEmpName).HasColumnName("FlowNodeEmpName");
			this.Property(t => t.FlowNodeStatus).HasColumnName("FlowNodeStatus");
			           
			#region Relationships
			#endregion
        }
    }
}  
