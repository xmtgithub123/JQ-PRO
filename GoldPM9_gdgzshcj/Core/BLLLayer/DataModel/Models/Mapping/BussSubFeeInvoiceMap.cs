#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class BussSubFeeInvoiceMap : EntityTypeConfiguration<BussSubFeeInvoice>
    {
        public BussSubFeeInvoiceMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.ProjSubId).IsRequired();
	  
			this.Property(t => t.ConSubId).IsRequired();
	  
			this.Property(t => t.SubFeeInvoiceType).IsRequired();
	  
			this.Property(t => t.SubFeeInvoiceMoney).IsRequired().HasPrecision(18,4);
	  
			this.Property(t => t.SubFeeInvoiceDate).IsRequired();
	  
			this.Property(t => t.SubFeeInvoiceEmpId).IsRequired();
	  
			this.Property(t => t.subFeeInvoiceNote).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.SubXml).IsRequired();
	  
			this.Property(t => t.FormTableID).IsRequired();
	  
			this.Property(t => t.ColAttType1).IsRequired();
	  
			this.Property(t => t.ColAttType2).IsRequired();
	  
			this.Property(t => t.ColAttDate1).IsRequired();
	  
			this.Property(t => t.ColAttDate2).IsRequired();
	  
			this.Property(t => t.ColAttFloat1).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.ColAttFloat2).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();


			 // Table & Column Mappings
			this.ToTable("BussSubFeeInvoice");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.ProjSubId).HasColumnName("ProjSubId");
			this.Property(t => t.ConSubId).HasColumnName("ConSubId");
			this.Property(t => t.SubFeeInvoiceType).HasColumnName("SubFeeInvoiceType");
			this.Property(t => t.SubFeeInvoiceMoney).HasColumnName("SubFeeInvoiceMoney");
			this.Property(t => t.SubFeeInvoiceDate).HasColumnName("SubFeeInvoiceDate");
			this.Property(t => t.SubFeeInvoiceEmpId).HasColumnName("SubFeeInvoiceEmpId");
			this.Property(t => t.subFeeInvoiceNote).HasColumnName("subFeeInvoiceNote");
			this.Property(t => t.SubXml).HasColumnName("SubXml");
			this.Property(t => t.FormTableID).HasColumnName("FormTableID");
			this.Property(t => t.ColAttType1).HasColumnName("ColAttType1");
			this.Property(t => t.ColAttType2).HasColumnName("ColAttType2");
			this.Property(t => t.ColAttDate1).HasColumnName("ColAttDate1");
			this.Property(t => t.ColAttDate2).HasColumnName("ColAttDate2");
			this.Property(t => t.ColAttFloat1).HasColumnName("ColAttFloat1");
			this.Property(t => t.ColAttFloat2).HasColumnName("ColAttFloat2");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			           
			#region Relationships
			this.HasRequired(t => t.FK_BussSubFeeInvoice_ConSubId).WithMany(t => t.FK_BussSubFeeInvoice_ConSubId).HasForeignKey(d => d.ConSubId);
			this.HasRequired(t => t.FK_BussSubFeeInvoice_FormTableID).WithMany(t => t.FK_BussSubFeeInvoice_FormTableID).HasForeignKey(d => d.FormTableID);
			this.HasRequired(t => t.FK_BussSubFeeInvoice_ProjSubId).WithMany(t => t.FK_BussSubFeeInvoice_ProjSubId).HasForeignKey(d => d.ProjSubId);
			this.HasRequired(t => t.FK_BussSubFeeInvoice_SubFeeInvoiceEmpId).WithMany(t => t.FK_BussSubFeeInvoice_SubFeeInvoiceEmpId).HasForeignKey(d => d.SubFeeInvoiceEmpId);
			this.HasRequired(t => t.FK_BussSubFeeInvoice_SubFeeInvoiceType).WithMany(t => t.FK_BussSubFeeInvoice_SubFeeInvoiceType).HasForeignKey(d => d.SubFeeInvoiceType);
			#endregion
        }
    }
}  
