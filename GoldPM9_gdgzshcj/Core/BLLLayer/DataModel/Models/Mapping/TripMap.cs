#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2017-03-09 10:36:42
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
    public class TripMap : EntityTypeConfiguration<Trip>
    {
        public TripMap()
        {
            this.HasKey(t => new { t.Id });

            this.Property(t => t.CreationTime).IsRequired();

            this.Property(t => t.CreatorEmpId).IsRequired();

            this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.CreatorDepId).IsRequired();

            this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeleterEmpId).IsRequired();

            this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeletionTime).IsRequired();

            this.Property(t => t.EmpID).IsRequired();

            this.Property(t => t.EmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.TripReceive).IsRequired().HasMaxLength(50);

            this.Property(t => t.StartDate).IsRequired();

            this.Property(t => t.EndDate).IsRequired();

            this.Property(t => t.Days).IsRequired();

            this.Property(t => t.TripReason).IsRequired().HasMaxLength(100);

            this.Property(t => t.TripTypeId).IsRequired();

            this.Property(t => t.TripType).IsRequired().HasMaxLength(50);

            this.Property(t => t.ApplicationDate).IsRequired();

            this.Property(t => t.DepPerson).IsRequired();
            this.Property(t => t.OfficePerson).IsRequired();
            this.Property(t => t.ManagerPerson).IsRequired();
            this.Property(t => t.check1).IsRequired();
            this.Property(t => t.check2).IsRequired();
            this.Property(t => t.check3).IsRequired();

            this.Property(t => t.SJTS).IsRequired();
            this.Property(t => t.BTSX).IsRequired();
            this.Property(t => t.BTFY).IsRequired();
            this.Property(t => t.BTFS).IsRequired();
            this.Property(t => t.IsBX).IsRequired();

            // Table & Column Mappings
            this.ToTable("Trip");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.CreationTime).HasColumnName("CreationTime");
            this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
            this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
            this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
            this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
            this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
            this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
            this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
            this.Property(t => t.EmpID).HasColumnName("EmpID");
            this.Property(t => t.EmpName).HasColumnName("EmpName");
            this.Property(t => t.TripReceive).HasColumnName("TripReceive");
            this.Property(t => t.StartDate).HasColumnName("StartDate");
            this.Property(t => t.EndDate).HasColumnName("EndDate");
            this.Property(t => t.Days).HasColumnName("Days");
            this.Property(t => t.TripReason).HasColumnName("TripReason");
            this.Property(t => t.TripTypeId).HasColumnName("TripTypeId");
            this.Property(t => t.TripType).HasColumnName("TripType");
            this.Property(t => t.ApplicationDate).HasColumnName("ApplicationDate");
            this.Property(t => t.DepPerson).HasColumnName("DepPerson");
            this.Property(t => t.OfficePerson).HasColumnName("OfficePerson");
            this.Property(t => t.ManagerPerson).HasColumnName("ManagerPerson");
            this.Property(t => t.check1).HasColumnName("check1");
            this.Property(t => t.check2).HasColumnName("check2");
            this.Property(t => t.check3).HasColumnName("check3");

            this.Property(t => t.SJTS).HasColumnName("SJTS");
            this.Property(t => t.BTSX).HasColumnName("BTSX");
            this.Property(t => t.BTFY).HasColumnName("BTFY");
            this.Property(t => t.BTFS).HasColumnName("BTFS");
            this.Property(t => t.IsBX).HasColumnName("IsBX");

            #region Relationships
            #endregion
        }
    }
}
