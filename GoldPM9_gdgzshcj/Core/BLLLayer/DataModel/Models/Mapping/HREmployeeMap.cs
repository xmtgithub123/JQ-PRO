#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-12-30 16:10:01
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class HREmployeeMap : EntityTypeConfiguration<HREmployee>
    {
        public HREmployeeMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.EmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.EmpIder).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.EmpSexID).IsRequired();
	  
			this.Property(t => t.EmpBirthday).IsRequired();
	  
			this.Property(t => t.EmpNation).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.EmpStatusID).IsRequired();
	  
			this.Property(t => t.DepID).IsRequired();
	  
			this.Property(t => t.EmpPost).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.EmpJoinDate).IsRequired();
	  
			this.Property(t => t.EmpLiveDate).IsRequired();
	  
			this.Property(t => t.EmpAccountsAddress).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.EmpHomeAddress).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.EmpPhoneNumber).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.LastEducationID).IsRequired();
	  
			this.Property(t => t.School).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.Specil).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.UrgenContactPerson).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.UrgenContactPersonTel).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.Note).IsRequired().HasMaxLength(500);

            this.Property(t => t.SysEmpId).IsRequired();

            this.Property(t => t.VacationDays).IsRequired();

            this.Property(t => t.VacationDays1).IsRequired();
            this.Property(t => t.CompanyID).IsRequired();


			 // Table & Column Mappings
			this.ToTable("HREmployee");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.EmpName).HasColumnName("EmpName");
			this.Property(t => t.EmpIder).HasColumnName("EmpIder");
			this.Property(t => t.EmpSexID).HasColumnName("EmpSexID");
			this.Property(t => t.EmpBirthday).HasColumnName("EmpBirthday");
			this.Property(t => t.EmpNation).HasColumnName("EmpNation");
			this.Property(t => t.EmpStatusID).HasColumnName("EmpStatusID");
			this.Property(t => t.DepID).HasColumnName("DepID");
			this.Property(t => t.EmpPost).HasColumnName("EmpPost");
			this.Property(t => t.EmpJoinDate).HasColumnName("EmpJoinDate");
			this.Property(t => t.EmpLiveDate).HasColumnName("EmpLiveDate");
			this.Property(t => t.EmpAccountsAddress).HasColumnName("EmpAccountsAddress");
			this.Property(t => t.EmpHomeAddress).HasColumnName("EmpHomeAddress");
			this.Property(t => t.EmpPhoneNumber).HasColumnName("EmpPhoneNumber");
			this.Property(t => t.LastEducationID).HasColumnName("LastEducationID");
			this.Property(t => t.School).HasColumnName("School");
			this.Property(t => t.Specil).HasColumnName("Specil");
			this.Property(t => t.UrgenContactPerson).HasColumnName("UrgenContactPerson");
			this.Property(t => t.UrgenContactPersonTel).HasColumnName("UrgenContactPersonTel");
			this.Property(t => t.Note).HasColumnName("Note");
            this.Property(t => t.SysEmpId).HasColumnName("SysEmpId");
            this.Property(t => t.VacationDays).HasColumnName("VacationDays");
            this.Property(t => t.VacationDays1).HasColumnName("VacationDays1");
            this.Property(t => t.CompanyID).HasColumnName("CompanyID");
            #region Relationships
            #endregion
        }
    }
}  
