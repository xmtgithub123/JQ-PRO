#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-07 09:28:24
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
    public class OaBookUseMap : EntityTypeConfiguration<OaBookUse>
    {
        public OaBookUseMap()
        {
            this.HasKey(t => new { t.Id });

            this.Property(t => t.BookID).IsRequired();

            this.Property(t => t.LendCount).IsRequired();

            this.Property(t => t.DateLend).IsRequired();

            this.Property(t => t.LendNote).IsRequired().HasMaxLength(500);

            this.Property(t => t.DateReturnPlan).IsRequired();

            this.Property(t => t.DateReturnFact).IsRequired();

            this.Property(t => t.ReturnEmpId).IsRequired();

            this.Property(t => t.ReturnEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.ReturnNote).IsRequired().HasMaxLength(50);

            this.Property(t => t.LastModificationTime).IsRequired();

            this.Property(t => t.LastModifierEmpId).IsRequired();

            this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.CreationTime).IsRequired();

            this.Property(t => t.CreatorEmpId).IsRequired();

            this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.FlowID).IsRequired();

            this.Property(t => t.FlowTime).IsRequired();

            this.Property(t => t.AgenEmpId).IsRequired();

            this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.CreatorDepId).IsRequired();

            this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeleterEmpId).IsRequired();

            this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeletionTime).IsRequired();

            this.Property(t => t.BookLoseType).IsRequired();


            // Table & Column Mappings
            this.ToTable("OaBookUse");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.BookID).HasColumnName("BookID");
            this.Property(t => t.LendCount).HasColumnName("LendCount");
            this.Property(t => t.DateLend).HasColumnName("DateLend");
            this.Property(t => t.LendNote).HasColumnName("LendNote");
            this.Property(t => t.DateReturnPlan).HasColumnName("DateReturnPlan");
            this.Property(t => t.DateReturnFact).HasColumnName("DateReturnFact");
            this.Property(t => t.ReturnEmpId).HasColumnName("ReturnEmpId");
            this.Property(t => t.ReturnEmpName).HasColumnName("ReturnEmpName");
            this.Property(t => t.ReturnNote).HasColumnName("ReturnNote");
            this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
            this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
            this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
            this.Property(t => t.CreationTime).HasColumnName("CreationTime");
            this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
            this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
            this.Property(t => t.FlowID).HasColumnName("FlowID");
            this.Property(t => t.FlowTime).HasColumnName("FlowTime");
            this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
            this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
            this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
            this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
            this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
            this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
            this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
            this.Property(t => t.BookLoseType).HasColumnName("BookLoseType");

            #region Relationships
            this.HasRequired(t => t.FK_OaBookUse_BookID).WithMany(t => t.FK_OaBookUse_BookID).HasForeignKey(d => d.BookID);
            #endregion
        }
    }
}
