#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2017-03-03 13:13:25
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
    public class VacationMap : EntityTypeConfiguration<Vacation>
    {
        public VacationMap()
        {
            this.HasKey(t => new { t.Id });

            this.Property(t => t.CreationTime).IsRequired();

            this.Property(t => t.CreatorEmpId).IsRequired();

            this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.CreatorDepId).IsRequired();

            this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeleterEmpId).IsRequired();

            this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.DeletionTime).IsRequired();

            this.Property(t => t.EmpID).IsRequired();

            this.Property(t => t.EmpName).IsRequired().HasMaxLength(50);

            this.Property(t => t.StartDate).IsRequired();

            this.Property(t => t.EndDate).IsRequired();

            this.Property(t => t.Days).IsRequired();

            this.Property(t => t.VacationReason).IsRequired().HasMaxLength(200);

            this.Property(t => t.DeptId).IsRequired();

            this.Property(t => t.DepName).IsRequired().HasMaxLength(50);

            this.Property(t => t.VacationTypeId).IsRequired();

            this.Property(t => t.VacationType).IsRequired().HasMaxLength(50);

            this.Property(t => t.hours).IsRequired();
            
            this.Property(t => t.departManager).IsRequired();

            this.Property(t => t.ViceManager).IsRequired();
            
            this.Property(t => t.Manager).IsRequired();


            // Table & Column Mappings
            this.ToTable("Vacation");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.CreationTime).HasColumnName("CreationTime");
            this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
            this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
            this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
            this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
            this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
            this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
            this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
            this.Property(t => t.EmpID).HasColumnName("EmpID");
            this.Property(t => t.EmpName).HasColumnName("EmpName");
            this.Property(t => t.StartDate).HasColumnName("StartDate");
            this.Property(t => t.EndDate).HasColumnName("EndDate");
            this.Property(t => t.Days).HasColumnName("Days");
            this.Property(t => t.VacationReason).HasColumnName("VacationReason");
            this.Property(t => t.DeptId).HasColumnName("DeptId");
            this.Property(t => t.DepName).HasColumnName("DepName");
            this.Property(t => t.VacationTypeId).HasColumnName("VacationTypeId");
            this.Property(t => t.VacationType).HasColumnName("VacationType");
            this.Property(t => t.hours).HasColumnName("hours");
            this.Property(t => t.departManager).HasColumnName("departManager");
            this.Property(t => t.ViceManager).HasColumnName("ViceManager");
            this.Property(t => t.Manager).HasColumnName("Manager");

            #region Relationships
            #endregion
        }
    }
}
