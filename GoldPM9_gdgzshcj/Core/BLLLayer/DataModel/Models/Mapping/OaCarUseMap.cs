#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2017-11-07 20:17:19
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class OaCarUseMap : EntityTypeConfiguration<OaCarUse>
    {
        public OaCarUseMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.CarID).IsRequired();
	  
			this.Property(t => t.UseApplyDatetime).IsRequired();
	  
			this.Property(t => t.UsePurpose).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.UsePlace).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.UseLeaderEmp).IsRequired();
	  
			this.Property(t => t.UsePeople).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.UsePeopleNum).IsRequired();
	  
			this.Property(t => t.UseNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.DateLeavePlan).IsRequired();
	  
			this.Property(t => t.DateArrivePlan).IsRequired();
	  
			this.Property(t => t.KmLeave).IsRequired().HasMaxLength(25);
	  
			this.Property(t => t.KmArrive).IsRequired().HasMaxLength(25);
	  
			this.Property(t => t.DateLeave).IsRequired();
	  
			this.Property(t => t.DateArrive).IsRequired();
	  
			this.Property(t => t.UseCarFee).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.UseCarFeeInvoice).IsRequired();
	  
			this.Property(t => t.UseCarDriver).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.UseCheckNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.UseCheckInDepId).IsRequired();
	  
			this.Property(t => t.UseCheckInEmpId).IsRequired();
	  
			this.Property(t => t.UseCheckInEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.UseCheckInDateTime).IsRequired();
	  
			this.Property(t => t.Distance).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.OilQuantity).IsRequired().HasPrecision(18,2);
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.IsFinish).IsRequired();
	  
			this.Property(t => t.IsNeedDriver).IsRequired();


			 // Table & Column Mappings
			this.ToTable("OaCarUse");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.CarID).HasColumnName("CarID");
			this.Property(t => t.UseApplyDatetime).HasColumnName("UseApplyDatetime");
			this.Property(t => t.UsePurpose).HasColumnName("UsePurpose");
			this.Property(t => t.UsePlace).HasColumnName("UsePlace");
			this.Property(t => t.UseLeaderEmp).HasColumnName("UseLeaderEmp");
			this.Property(t => t.UsePeople).HasColumnName("UsePeople");
			this.Property(t => t.UsePeopleNum).HasColumnName("UsePeopleNum");
			this.Property(t => t.UseNote).HasColumnName("UseNote");
			this.Property(t => t.DateLeavePlan).HasColumnName("DateLeavePlan");
			this.Property(t => t.DateArrivePlan).HasColumnName("DateArrivePlan");
			this.Property(t => t.KmLeave).HasColumnName("KmLeave");
			this.Property(t => t.KmArrive).HasColumnName("KmArrive");
			this.Property(t => t.DateLeave).HasColumnName("DateLeave");
			this.Property(t => t.DateArrive).HasColumnName("DateArrive");
			this.Property(t => t.UseCarFee).HasColumnName("UseCarFee");
			this.Property(t => t.UseCarFeeInvoice).HasColumnName("UseCarFeeInvoice");
			this.Property(t => t.UseCarDriver).HasColumnName("UseCarDriver");
			this.Property(t => t.UseCheckNote).HasColumnName("UseCheckNote");
			this.Property(t => t.UseCheckInDepId).HasColumnName("UseCheckInDepId");
			this.Property(t => t.UseCheckInEmpId).HasColumnName("UseCheckInEmpId");
			this.Property(t => t.UseCheckInEmpName).HasColumnName("UseCheckInEmpName");
			this.Property(t => t.UseCheckInDateTime).HasColumnName("UseCheckInDateTime");
			this.Property(t => t.Distance).HasColumnName("Distance");
			this.Property(t => t.OilQuantity).HasColumnName("OilQuantity");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.IsFinish).HasColumnName("IsFinish");
			this.Property(t => t.IsNeedDriver).HasColumnName("IsNeedDriver");
			           
			#region Relationships
			#endregion
        }
    }
}  
