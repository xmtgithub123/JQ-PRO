#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class FlowNodeMap : EntityTypeConfiguration<FlowNode>
    {
        public FlowNodeMap()
        {
			this.HasKey(t => new { t.Id}); 
				  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowNodeTypeID).IsRequired();
	  
			this.Property(t => t.FlowNodeName).IsRequired().HasMaxLength(400);
	  
			this.Property(t => t.FlowNodeParentID).IsRequired();
	  
			this.Property(t => t.FlowNodeOrder).IsRequired();
	  
			this.Property(t => t.FlowNodeBackID).IsRequired();
	  
			this.Property(t => t.FlowNodeEmpId).IsRequired();
	  
			this.Property(t => t.FlowNodeEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowNodeEmpIDs).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.FlowNodeWriteControlsName).IsRequired().HasMaxLength(1000);
	  
			this.Property(t => t.FlowNodeNote).IsRequired().HasMaxLength(1000);
	  
			this.Property(t => t.FlowNodeStatusID).IsRequired();
	  
			this.Property(t => t.FlowNodeDate).IsRequired();
	  
			this.Property(t => t.FlowNodeIsToFinish).IsRequired();
	  
			this.Property(t => t.FlowNodeIsToPass).IsRequired();
	  
			this.Property(t => t.FlowNodeIsToMessage).IsRequired();
	  
			this.Property(t => t.FlowNodeValidateGroup).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.FlowNodeNodeSkipID).IsRequired();
	  
			this.Property(t => t.FlowNodeNodeRoles).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.FlowNodeNodeThisDep).IsRequired();
	  
			this.Property(t => t.FlowNodeSelectToBack).IsRequired();
	  
			this.Property(t => t.FlowNodeFinishToNext).IsRequired();
	  
			this.Property(t => t.FlowNodeFromEmpId).IsRequired();
	  
			this.Property(t => t.FlowNodeFromEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowNodeFromDateTime).IsRequired();
	  
			this.Property(t => t.FlowNodeRefIsDelete).IsRequired();
	  
			this.Property(t => t.FlowNodeIsRemind).IsRequired();
	  
			this.Property(t => t.FlowNodeSameId).IsRequired();
	  
			this.Property(t => t.FlowNodeSignControlName).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.FlowModelNodeID).IsRequired();
	  
			this.Property(t => t.FlowNodeDays).IsRequired().HasPrecision(18,1);
	  
			this.Property(t => t.FlowNodeAutoFinished).IsRequired();
	  
			this.Property(t => t.FlowNodeAutoStatus).IsRequired();
	  
			this.Property(t => t.FlowNodeIsFactNext).IsRequired();
	  
			this.Property(t => t.FlowNodeUrl).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.FlowNodeAppDefaultValue).IsRequired().HasMaxLength(20);
	  
			this.Property(t => t.FlowNodeAppIsRequired).IsRequired();
	  
			this.Property(t => t.FlowNodeAppIsLastTime).IsRequired();
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.FlowNodeSelectToSkip).IsRequired();
	  
			this.Property(t => t.FlowNodeXml).IsRequired();


			 // Table & Column Mappings
			this.ToTable("FlowNode");
			this.Property(t => t.Id).HasColumnName("Id");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowNodeTypeID).HasColumnName("FlowNodeTypeID");
			this.Property(t => t.FlowNodeName).HasColumnName("FlowNodeName");
			this.Property(t => t.FlowNodeParentID).HasColumnName("FlowNodeParentID");
			this.Property(t => t.FlowNodeOrder).HasColumnName("FlowNodeOrder");
			this.Property(t => t.FlowNodeBackID).HasColumnName("FlowNodeBackID");
			this.Property(t => t.FlowNodeEmpId).HasColumnName("FlowNodeEmpId");
			this.Property(t => t.FlowNodeEmpName).HasColumnName("FlowNodeEmpName");
			this.Property(t => t.FlowNodeEmpIDs).HasColumnName("FlowNodeEmpIDs");
			this.Property(t => t.FlowNodeWriteControlsName).HasColumnName("FlowNodeWriteControlsName");
			this.Property(t => t.FlowNodeNote).HasColumnName("FlowNodeNote");
			this.Property(t => t.FlowNodeStatusID).HasColumnName("FlowNodeStatusID");
			this.Property(t => t.FlowNodeDate).HasColumnName("FlowNodeDate");
			this.Property(t => t.FlowNodeIsToFinish).HasColumnName("FlowNodeIsToFinish");
			this.Property(t => t.FlowNodeIsToPass).HasColumnName("FlowNodeIsToPass");
			this.Property(t => t.FlowNodeIsToMessage).HasColumnName("FlowNodeIsToMessage");
			this.Property(t => t.FlowNodeValidateGroup).HasColumnName("FlowNodeValidateGroup");
			this.Property(t => t.FlowNodeNodeSkipID).HasColumnName("FlowNodeNodeSkipID");
			this.Property(t => t.FlowNodeNodeRoles).HasColumnName("FlowNodeNodeRoles");
			this.Property(t => t.FlowNodeNodeThisDep).HasColumnName("FlowNodeNodeThisDep");
			this.Property(t => t.FlowNodeSelectToBack).HasColumnName("FlowNodeSelectToBack");
			this.Property(t => t.FlowNodeFinishToNext).HasColumnName("FlowNodeFinishToNext");
			this.Property(t => t.FlowNodeFromEmpId).HasColumnName("FlowNodeFromEmpId");
			this.Property(t => t.FlowNodeFromEmpName).HasColumnName("FlowNodeFromEmpName");
			this.Property(t => t.FlowNodeFromDateTime).HasColumnName("FlowNodeFromDateTime");
			this.Property(t => t.FlowNodeRefIsDelete).HasColumnName("FlowNodeRefIsDelete");
			this.Property(t => t.FlowNodeIsRemind).HasColumnName("FlowNodeIsRemind");
			this.Property(t => t.FlowNodeSameId).HasColumnName("FlowNodeSameId");
			this.Property(t => t.FlowNodeSignControlName).HasColumnName("FlowNodeSignControlName");
			this.Property(t => t.FlowModelNodeID).HasColumnName("FlowModelNodeID");
			this.Property(t => t.FlowNodeDays).HasColumnName("FlowNodeDays");
			this.Property(t => t.FlowNodeAutoFinished).HasColumnName("FlowNodeAutoFinished");
			this.Property(t => t.FlowNodeAutoStatus).HasColumnName("FlowNodeAutoStatus");
			this.Property(t => t.FlowNodeIsFactNext).HasColumnName("FlowNodeIsFactNext");
			this.Property(t => t.FlowNodeUrl).HasColumnName("FlowNodeUrl");
			this.Property(t => t.FlowNodeAppDefaultValue).HasColumnName("FlowNodeAppDefaultValue");
			this.Property(t => t.FlowNodeAppIsRequired).HasColumnName("FlowNodeAppIsRequired");
			this.Property(t => t.FlowNodeAppIsLastTime).HasColumnName("FlowNodeAppIsLastTime");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.FlowNodeSelectToSkip).HasColumnName("FlowNodeSelectToSkip");
			this.Property(t => t.FlowNodeXml).HasColumnName("FlowNodeXml");
			           
			#region Relationships
			this.HasRequired(t => t.FK_FlowNode_FlowID).WithMany(t => t.FK_FlowNode_FlowID).HasForeignKey(d => d.FlowID);
			this.HasRequired(t => t.FK_FlowNode_FlowNodeStatusID).WithMany(t => t.FK_FlowNode_FlowNodeStatusID).HasForeignKey(d => d.FlowNodeStatusID);
			#endregion
        }
    }
}  
