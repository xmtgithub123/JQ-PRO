#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-09-06 20:09:48
#endregion
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
namespace DataModel.Models.Mapping
{
public class IsoFormMap : EntityTypeConfiguration<IsoForm>
    {
        public IsoFormMap()
        {
			this.HasKey(t => new { t.FormID}); 
				  
			this.Property(t => t.ProjID).IsRequired();
	  
			this.Property(t => t.EngID).IsRequired();
	  
			this.Property(t => t.PhaseID).IsRequired();
	  
			this.Property(t => t.SpecID).IsRequired();
	  
			this.Property(t => t.TaskGroupID).IsRequired();
	  
			this.Property(t => t.TaskID).IsRequired();
	  
			this.Property(t => t.FormTypeID).IsRequired();
	  
			this.Property(t => t.FormDate).IsRequired();
	  
			this.Property(t => t.FormName).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.FormReason).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.FormNote).IsRequired().HasMaxLength(500);
	  
			this.Property(t => t.FormLinkURL).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.ColAttType1).IsRequired();
	  
			this.Property(t => t.ColAttType2).IsRequired();
	  
			this.Property(t => t.ColAttType3).IsRequired();
	  
			this.Property(t => t.ColAttType4).IsRequired();
	  
			this.Property(t => t.ColAttType5).IsRequired();
	  
			this.Property(t => t.ColAttVal1).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal2).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal3).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal4).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttVal5).IsRequired().HasMaxLength(100);
	  
			this.Property(t => t.ColAttDate1).IsRequired();
	  
			this.Property(t => t.ColAttDate2).IsRequired();
	  
			this.Property(t => t.ColAttDate3).IsRequired();
	  
			this.Property(t => t.ColAttDate4).IsRequired();
	  
			this.Property(t => t.ColAttDate5).IsRequired();
	  
			this.Property(t => t.FormCtlXml).IsRequired();
	  
			this.Property(t => t.RefTable).IsRequired().HasMaxLength(200);
	  
			this.Property(t => t.RefID).IsRequired();
	  
			this.Property(t => t.FlowID).IsRequired();
	  
			this.Property(t => t.FlowTime).IsRequired();
	  
			this.Property(t => t.LastModificationTime).IsRequired();
	  
			this.Property(t => t.LastModifierEmpId).IsRequired();
	  
			this.Property(t => t.LastModifierEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreationTime).IsRequired();
	  
			this.Property(t => t.CreatorEmpId).IsRequired();
	  
			this.Property(t => t.CreatorEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.CreatorDepId).IsRequired();
	  
			this.Property(t => t.CreatorDepName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.DeletionTime).IsRequired();
	  
			this.Property(t => t.DeleterEmpId).IsRequired();
	  
			this.Property(t => t.DeleterEmpName).IsRequired().HasMaxLength(50);
	  
			this.Property(t => t.AgenEmpId).IsRequired();
	  
			this.Property(t => t.AgenEmpName).IsRequired().HasMaxLength(50);


			 // Table & Column Mappings
			this.ToTable("IsoForm");
			this.Property(t => t.FormID).HasColumnName("FormID");
			this.Property(t => t.ProjID).HasColumnName("ProjID");
			this.Property(t => t.EngID).HasColumnName("EngID");
			this.Property(t => t.PhaseID).HasColumnName("PhaseID");
			this.Property(t => t.SpecID).HasColumnName("SpecID");
			this.Property(t => t.TaskGroupID).HasColumnName("TaskGroupID");
			this.Property(t => t.TaskID).HasColumnName("TaskID");
			this.Property(t => t.FormTypeID).HasColumnName("FormTypeID");
			this.Property(t => t.FormDate).HasColumnName("FormDate");
			this.Property(t => t.FormName).HasColumnName("FormName");
			this.Property(t => t.FormReason).HasColumnName("FormReason");
			this.Property(t => t.FormNote).HasColumnName("FormNote");
			this.Property(t => t.FormLinkURL).HasColumnName("FormLinkURL");
			this.Property(t => t.ColAttType1).HasColumnName("ColAttType1");
			this.Property(t => t.ColAttType2).HasColumnName("ColAttType2");
			this.Property(t => t.ColAttType3).HasColumnName("ColAttType3");
			this.Property(t => t.ColAttType4).HasColumnName("ColAttType4");
			this.Property(t => t.ColAttType5).HasColumnName("ColAttType5");
			this.Property(t => t.ColAttVal1).HasColumnName("ColAttVal1");
			this.Property(t => t.ColAttVal2).HasColumnName("ColAttVal2");
			this.Property(t => t.ColAttVal3).HasColumnName("ColAttVal3");
			this.Property(t => t.ColAttVal4).HasColumnName("ColAttVal4");
			this.Property(t => t.ColAttVal5).HasColumnName("ColAttVal5");
			this.Property(t => t.ColAttDate1).HasColumnName("ColAttDate1");
			this.Property(t => t.ColAttDate2).HasColumnName("ColAttDate2");
			this.Property(t => t.ColAttDate3).HasColumnName("ColAttDate3");
			this.Property(t => t.ColAttDate4).HasColumnName("ColAttDate4");
			this.Property(t => t.ColAttDate5).HasColumnName("ColAttDate5");
			this.Property(t => t.FormCtlXml).HasColumnName("FormCtlXml");
			this.Property(t => t.RefTable).HasColumnName("RefTable");
			this.Property(t => t.RefID).HasColumnName("RefID");
			this.Property(t => t.FlowID).HasColumnName("FlowID");
			this.Property(t => t.FlowTime).HasColumnName("FlowTime");
			this.Property(t => t.LastModificationTime).HasColumnName("LastModificationTime");
			this.Property(t => t.LastModifierEmpId).HasColumnName("LastModifierEmpId");
			this.Property(t => t.LastModifierEmpName).HasColumnName("LastModifierEmpName");
			this.Property(t => t.CreationTime).HasColumnName("CreationTime");
			this.Property(t => t.CreatorEmpId).HasColumnName("CreatorEmpId");
			this.Property(t => t.CreatorEmpName).HasColumnName("CreatorEmpName");
			this.Property(t => t.CreatorDepId).HasColumnName("CreatorDepId");
			this.Property(t => t.CreatorDepName).HasColumnName("CreatorDepName");
			this.Property(t => t.DeletionTime).HasColumnName("DeletionTime");
			this.Property(t => t.DeleterEmpId).HasColumnName("DeleterEmpId");
			this.Property(t => t.DeleterEmpName).HasColumnName("DeleterEmpName");
			this.Property(t => t.AgenEmpId).HasColumnName("AgenEmpId");
			this.Property(t => t.AgenEmpName).HasColumnName("AgenEmpName");
			           
			#region Relationships
			this.HasRequired(t => t.FK_IsoForm_ColAttType1).WithMany(t => t.FK_IsoForm_ColAttType1).HasForeignKey(d => d.ColAttType1);
			this.HasRequired(t => t.FK_IsoForm_ColAttType2).WithMany(t => t.FK_IsoForm_ColAttType2).HasForeignKey(d => d.ColAttType2);
			this.HasRequired(t => t.FK_IsoForm_ColAttType3).WithMany(t => t.FK_IsoForm_ColAttType3).HasForeignKey(d => d.ColAttType3);
			this.HasRequired(t => t.FK_IsoForm_EngID).WithMany(t => t.FK_IsoForm_EngID).HasForeignKey(d => d.EngID);
			this.HasRequired(t => t.FK_IsoForm_PhaseID).WithMany(t => t.FK_IsoForm_PhaseID).HasForeignKey(d => d.PhaseID);
			this.HasRequired(t => t.FK_IsoForm_ProjID).WithMany(t => t.FK_IsoForm_ProjID).HasForeignKey(d => d.ProjID);
			this.HasRequired(t => t.FK_IsoForm_SpecID).WithMany(t => t.FK_IsoForm_SpecID).HasForeignKey(d => d.SpecID);
			this.HasRequired(t => t.FK_IsoForm_TaskGroupID).WithMany(t => t.FK_IsoForm_TaskGroupID).HasForeignKey(d => d.TaskGroupID);
			this.HasRequired(t => t.FK_IsoForm_TaskID).WithMany(t => t.FK_IsoForm_TaskID).HasForeignKey(d => d.TaskID);
			#endregion
        }
    }
}  
