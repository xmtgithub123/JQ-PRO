#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-12 14:56:40
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Xml;
using JQ.Util;
using System.Data.Entity;

namespace DBSql.Pay
{
    public class PayBalanceChangeHist : EFRepository<DataModel.Models.PayBalanceChangeHist>
    {
        /// <summary>
        /// 改变历史记录
        /// </summary>
        /// <param name="payModel"></param>
        /// <param name="newMoney"></param>
        /// <param name="model"></param>
        /// <returns></returns>
       public int PayChangeInfo(int id,decimal newMoney,DataModel.Models.PayBalanceChangeHist model)
        {

            int result = 0;
            PayBalanceLot lot = new PayBalanceLot();
            PayBalanceChangeHist op = new PayBalanceChangeHist();
            PayBalanceUserAccount account = new PayBalanceUserAccount();
            lot.DbContextRepository(this.UnitOfWork,this.DbContext);
            op.DbContextRepository(this.UnitOfWork,this.DbContext);
            account.DbContextRepository(this.UnitOfWork,this.DbContext);
            try
            {
                UnitOfWork.BeginTransaction();
                DataModel.Models.PayBalanceUserAccount payModel = account.Get(id);
                decimal oldMoney = payModel.BalanceMoney;
                model.BalanceOldMoney = oldMoney;
                model.BalanceNewMoney = newMoney;
                model.BalanceEmpAccountID = payModel.Id;
                op.Add(model);

                payModel.BalanceMoney = newMoney;
                account.Edit(payModel);

                DataModel.Models.PayBalanceLot modelLot = lot.Get(payModel.BalanceLotID);
                decimal AllMoney = modelLot.AllMoney;
                modelLot.AllMoney = AllMoney - oldMoney + newMoney;
                lot.Edit(modelLot);

                UnitOfWork.CommitTransaction();
                result++;
            }
            catch(Exception ex)
            {
                UnitOfWork.RollBackTransaction();
            }
            return result;
        }
    }
}
