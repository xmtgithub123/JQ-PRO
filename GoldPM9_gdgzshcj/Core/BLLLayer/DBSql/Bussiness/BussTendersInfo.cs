#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-12 14:56:40
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Xml;
using EntityFramework.Extensions;
using System.Data.Entity;
using JQ.Util;
using System.Data.SqlClient;
using System.Data;
using System.Collections;

namespace DBSql.Bussiness
{
    public class BussTendersInfo : EFRepository<DataModel.Models.BussTendersInfo>
    {
        public int GetTendersCount(string TendersNumber, int Id = 0)
        {
            int Res = 0;
            string sql = "select count(*) from BussTendersInfo where TendersNumber=@TendersNumber and DeleterEmpId = 0 ";

            if (Id > 0)
            {
                sql += " and Id!=" + Id;
            }

            SqlParameter[] sqlp = {
                new SqlParameter("@TendersNumber",SqlDbType.NVarChar)
            };

            try
            {
                sqlp[0].Value = TendersNumber.Trim();
                Res = Convert.ToInt32(DBExecute.ExecuteScalar(sql, sqlp));
            }
            catch
            {

            }
            return Res;
        }
        public void CreateOrUpdate(DataModel.Models.BussTendersInfo model, XmlDocument xml)
        {
            using (var accessor = base.DbContext)
            {
                accessor.Database.Connection.Open();
                int MainTableID = -1;
                using (var tran = base.DbContext.Database.BeginTransaction())
                {
                    #region 新增/修改数据
                    if (model.Id > 0)
                    {

                        accessor.Entry(model).State = System.Data.Entity.EntityState.Modified;
                        accessor.SaveChanges();
                        MainTableID = model.Id;
                    }
                    else
                    {
                        accessor.Set<DataModel.Models.BussTendersInfo>().Add(model);
                        accessor.SaveChanges();
                        MainTableID = model.Id;
                    }
                    #endregion

                    var source = accessor.Set<DataModel.Models.BussTendersInfoDetail>().Where(m => m.BussTendersInfoID == MainTableID).ToList();
                    RecuriseCreateOrUpdate(xml.DocumentElement, 0, source, accessor, "", MainTableID);
                    RecuriseDelete(source, xml.DocumentElement, accessor);
                    accessor.SaveChanges();
                    tran.Commit();
                }
            }
        }
        private void RecuriseCreateOrUpdate(XmlElement xmlElement, int parentID, List<DataModel.Models.BussTendersInfoDetail> source, DbContext accessor, string path, int mainTableID)
        {
            var items = xmlElement.SelectNodes("Item");
            foreach (XmlElement item in items)
            {
                var id = TypeHelper.parseInt(item.GetAttribute("Id"));
                if (id < 0)
                {
                    //插入
                    var data = new DataModel.Models.BussTendersInfoDetail()
                    {
                        BussTendersInfoID = mainTableID,
                        CustomerID = TypeHelper.parseInt(item.GetAttribute("CustomerID")),
                        BusinessPoints = TypeHelper.parseInt(item.GetAttribute("BusinessPoints")),
                        TechnologyPoints = TypeHelper.parseInt(item.GetAttribute("TechnologyPoints")),
                        TotalityPoints = TypeHelper.parseInt(item.GetAttribute("TotalityPoints")),
                        WinState = TypeHelper.parseInt(item.GetAttribute("WinState")),
                        WinTime = TypeHelper.parseDateTime(item.GetAttribute("WinTime")),
                    };
                    accessor.Set<DataModel.Models.BussTendersInfoDetail>().Add(data);
                    accessor.SaveChanges();
                    id = data.Id;
                }
                else if (id > 0)
                {
                    var data = accessor.Set<DataModel.Models.BussTendersInfoDetail>().FirstOrDefault(m => m.Id == id);
                    if (data == null)
                    {
                        continue;
                    }
                    data.CustomerID = TypeHelper.parseInt(item.GetAttribute("CustomerID"));
                    data.BusinessPoints = TypeHelper.parseInt(item.GetAttribute("BusinessPoints"));
                    data.TechnologyPoints = TypeHelper.parseInt(item.GetAttribute("TechnologyPoints"));
                    data.TotalityPoints = TypeHelper.parseInt(item.GetAttribute("TotalityPoints"));
                    data.WinState = TypeHelper.parseInt(item.GetAttribute("WinState"));
                    data.WinTime = TypeHelper.parseDateTime(item.GetAttribute("WinTime"));
                    accessor.Entry(data).State = System.Data.Entity.EntityState.Modified;
                    accessor.SaveChanges();
                    id = data.Id;
                }
                RecuriseCreateOrUpdate(item, id, source, accessor, path.ToString() + id.ToString() + "/", mainTableID);
            }
        }
        private void RecuriseDelete(List<DataModel.Models.BussTendersInfoDetail> sources, XmlElement xmlElement, DbContext accessor)
        {
            var allItems = xmlElement.GetElementsByTagName("Item");
            foreach (var source in sources)
            {
                var isIn = false;
                foreach (XmlElement item in allItems)
                {
                    if (TypeHelper.parseInt(item.GetAttribute("Id")) == source.Id)
                    {
                        isIn = true;
                        break;
                    }
                }
                if (!isIn)
                {
                    accessor.Set<DataModel.Models.BussTendersInfoDetail>().Where(m => m.Id == source.Id).Delete();

                }
            }
        }
        public DataTable GetListInfo(Common.SqlPageInfo queryContext)
        {
            string RowColumn = "t.Id, t.TendersName,t.TendersNumber ,t.TenderOpenTime,t.TenderScope";
            RowColumn += ",isnull((select baseName from  basedata where baseID=t.TenderProjectType),'') as TenderProjectTypeName";
            RowColumn += ",isnull((select baseName from  basedata where baseID=t.TenderState),'') as TenderStateName";

            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from dbo.BussTendersInfo AS t where 1=1 and DeleterEmpId=0 ");

            SqlParameter[] paras = {
                new SqlParameter("@TextCondtion",SqlDbType.VarChar),
                new SqlParameter("@TenderStartTime",SqlDbType.DateTime),
                new SqlParameter("@TenderEndTime",SqlDbType.DateTime),
            };

            if (!string.IsNullOrEmpty(queryContext.TextCondtion))
            {
                strSql.Append(" and (t.TendersName like '%'+@TextCondtion+'%' or t.TendersNumber like '%'+@TextCondtion+'%') ");
                paras[0].Value = queryContext.TextCondtion;
            }

            if (queryContext.SelectCondtion != null && queryContext.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in queryContext.SelectCondtion)
                {
                    if (de.Value == null || de.Value.ToString().Trim() == "") continue;

                    switch (de.Key.ToString())
                    {
                        case "TenderStartTime":
                            if (de.Value.ToString() != "")
                            {
                                strSql.Append(" and t.TenderOpenTime>=@TenderStartTime");
                                paras[1].Value = Convert.ToDateTime(de.Value);
                            }
                            break;
                        case "TenderEndTime":
                            if (de.Value.ToString() != "")
                            {
                                strSql.Append(" and t.TenderOpenTime<=@TenderEndTime");
                                paras[2].Value = Convert.ToDateTime(de.Value).AddHours(23.99);
                            }
                            break;
                        case "IsAudit":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and (SELECT COUNT(*) FROM dbo.Flow WHERE FlowRefTable='BussTender' AND FlowRefID=t.id AND  FlowStatusID=3)>0");
                                }
                            }
                            break;
                        default:
                            break;
                    }
                }
            }
            //---------------- 得到总记录数-------------------------//
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), paras);

            if (obj == null && obj == DBNull.Value) queryContext.PageTotleRowCount = 0;
            else queryContext.PageTotleRowCount = Convert.ToInt32(obj);
            //------------------------------------------------------//

            if (String.IsNullOrEmpty(queryContext.SelectOrder))
            {
                queryContext.SelectOrder = "t.Id desc";
            }

            string sql = Helper.SqlPage.ExecPageStrSql(queryContext, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), paras);
        }

        public DataTable FilterTenderUnitInfo(Common.SqlPageInfo queryContext)
        {
            string RowColumn = "d.BussTendersInfoID,d.Id,d.BusinessPoints,d.TechnologyPoints,d.TotalityPoints,d.WinTime,c.CustName";
            RowColumn += ",isnull((select baseName from basedata where baseID=d.WinState),'') as WinStateName";
            RowColumn += ",(SELECT TendersNumber FROM dbo.BussTendersInfo where Id=d.BussTendersInfoID) as TendersNumber";
            RowColumn += ",(SELECT TendersName FROM dbo.BussTendersInfo where Id=d.BussTendersInfoID) as TendersName";
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from dbo.BussTendersInfoDetail AS d inner join dbo.BussCustomer  c  ON  d.CustomerID=c.Id  where 1=1 ");

            SqlParameter[] paras = {
                new SqlParameter("@TextCondtion",SqlDbType.VarChar),
                new SqlParameter("@BussTendersInfoID", SqlDbType.Int)
        };

            if (!string.IsNullOrEmpty(queryContext.TextCondtion))
            {
                strSql.Append(" and (c.CustName like '%'+@TextCondtion+'%') ");
                paras[0].Value = queryContext.TextCondtion;
            }
            if (queryContext.SelectCondtion != null && queryContext.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in queryContext.SelectCondtion)
                {
                    if (de.Value == null || de.Value.ToString().Trim() == "") continue;

                    switch (de.Key.ToString())
                    {
                        case "Id":
                            if (de.Value.ToString() != "0")
                            {
                                strSql.Append(" and d.BussTendersInfoID=@BussTendersInfoID");
                                paras[1].Value = Convert.ToInt32(de.Value.ToString());
                            }
                            break;
                        case "Filter":
                            if (de.Value.ToString() != "0")
                            {
                                strSql.Append(" and (select Count(c.Id) from dbo.BussTendersCost c WHERE c.BussTendersInfoDetailID=d.Id  and DeleterEmpId=0)=0");
                            }
                            break;
                        default:
                            break;
                    }
                }
            }
            //---------------- 得到总记录数-------------------------//
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), paras);

            if (obj == null && obj == DBNull.Value) queryContext.PageTotleRowCount = 0;
            else queryContext.PageTotleRowCount = Convert.ToInt32(obj);
            //------------------------------------------------------//

            if (String.IsNullOrEmpty(queryContext.SelectOrder))
            {
                queryContext.SelectOrder = "d.Id desc";
            }

            string sql = Helper.SqlPage.ExecPageStrSql(queryContext, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), paras);
        }

        public DataTable jsonList(Common.SqlPageInfo queryContext, DataModel.EmpSession userInfo = null)
        {

            string RowColumn = "t.Id, d.Id as detailId,t.TendersNumber,t.TendersName,t.TenderScope,t.TenderOpenTime,cust.CustName,t.CreatorEmpId";
            RowColumn += ",d.BusinessPoints,d.TechnologyPoints,d.TotalityPoints,d.WinTime";
            RowColumn += ",isnull((select baseName from basedata where baseID=d.WinState),'') as WinStateName";
            RowColumn += ",isnull((select baseName from basedata where baseID=t.TenderProjectType),'') as TenderProjectTypeName";
            RowColumn += ",isnull((select baseName from basedata where baseID=t.TenderState),'') as TenderStateName";
            RowColumn += ",f.Id AS FlowID, f.FlowName,f.FlowStatusID,f.FlowStatusName,f.FlowXml.value('(Root/TurnedEmpIDs/text())[1]', 'nvarchar(200)') AS FlowTurnedEmpIDs ";

            StringBuilder strSql = new StringBuilder();
            strSql.Append(@" select Count(1) from dbo.BussTendersInfoDetail AS d inner join dbo.BussTendersInfo AS  t ON d.BussTendersInfoID=t.Id
                                                                                 inner join dbo.BussCustomer AS cust ON d.CustomerID=cust.Id  
                                                                                 LEFT JOIN Flow f ON f.FlowRefID=t.Id and f.FlowRefTable='BussTender'          
                                                                                 where 1=1 and t.DeleterEmpId=0 ");

            SqlParameter[] paras = {
                new SqlParameter("@TextCondtion",SqlDbType.VarChar),

                new SqlParameter("@TenderOpenTimeS",SqlDbType.DateTime),
                new SqlParameter("@TenderOpenTimeE",SqlDbType.DateTime),

                new SqlParameter("@CreatorDepId",SqlDbType.Int),
                new SqlParameter("@CreatorEmpId",SqlDbType.Int),
            };

            if (!string.IsNullOrEmpty(queryContext.TextCondtion))
            {
                strSql.Append(" and (t.TendersName like '%'+@TextCondtion+'%' or t.TendersNumber like '%'+@TextCondtion+'%' or cust.CustName like '%'+@TextCondtion+'%') ");
                paras[0].Value = queryContext.TextCondtion;
            }

            if (queryContext.SelectCondtion != null && queryContext.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in queryContext.SelectCondtion)
                {
                    if (de.Value == null || de.Value.ToString().Trim() == "") continue;

                    switch (de.Key.ToString())
                    {
                        case "TenderOpenTimeS":
                            if (de.Value.ToString() != "")
                            {
                                strSql.Append(" and t.TenderOpenTime>=@TenderOpenTimeS");
                                paras[1].Value = Convert.ToDateTime(de.Value);
                            }
                            break;
                        case "TenderOpenTimeE":
                            if (de.Value.ToString() != "")
                            {
                                strSql.Append(" and t.TenderOpenTime<=@TenderOpenTimeE");
                                paras[2].Value = Convert.ToDateTime(de.Value).AddHours(23.99);
                            }
                            break;
                        case "TenderState":
                            {
                                strSql.Append(string.Format(" and t.TenderState in ({0})", de.Value.ToString()));
                            }
                            break;
                        case "QueryDeptID":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and t.CreatorDepId=@CreatorDepId");
                                    paras[3].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        case "QueryEmpID":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and t.CreatorEmpId=@CreatorEmpId");
                                    paras[4].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        default:
                            break;
                    }
                }
            }
            //---------------- 得到总记录数-------------------------//
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), paras);

            if (obj == null && obj == DBNull.Value) queryContext.PageTotleRowCount = 0;
            else queryContext.PageTotleRowCount = Convert.ToInt32(obj);
            //------------------------------------------------------//

            if (String.IsNullOrEmpty(queryContext.SelectOrder))
            {
                queryContext.SelectOrder = "t.Id desc";
            }

            string sql = Helper.SqlPage.ExecPageStrSql(queryContext, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), paras);
        }

        public void UpdateBussTendersInfoList(int[] ids, DataModel.EmpSession userInfo)
        {
            if (ids.Length == 0)
            {
                return;
            }
            string idSet = string.Join(",", ids);
            if (string.IsNullOrEmpty(idSet))
            {
                return;
            }
            var sbSQL = new StringBuilder();
            sbSQL.Append(string.Format("Update BussTendersInfo set DeleterEmpId={0},DeleterEmpName='{1}',DeletionTime='{2}' WHERE ID IN ({3})", userInfo.EmpID, userInfo.EmpName, DateTime.Now, idSet));
            DAL.DBExecute.ExecuteNonQuery(sbSQL.ToString());
        }
    }
}
