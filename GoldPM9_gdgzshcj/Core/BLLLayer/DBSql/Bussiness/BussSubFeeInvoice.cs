#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-12 14:56:40
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Xml;
using JQ.Util;
using System.Data.Entity;

namespace DBSql.Bussiness
{
    public class BussSubFeeInvoice : EFRepository<DataModel.Models.BussSubFeeInvoice>
    {
        public void CreateOrUpdate(DataModel.Models.IsoForm model, XmlDocument xml)
        {
            using (var accessor = base.DbContext)
            {
                accessor.Database.Connection.Open();
                int MainTableID = -1;
                using (var tran = base.DbContext.Database.BeginTransaction())
                {
                    #region 新增/修改数据
                    if (model.FormID > 0)
                    {

                        //accessor.Entry(model).State = System.Data.Entity.EntityState.Modified;
                        //accessor.SaveChanges();
                        //MainTableID = model.Id;
                    }
                    else
                    {
                        //accessor.Set<DataModel.Models.BussTendersInfo>().Add(model);
                        //accessor.SaveChanges();
                        //MainTableID = model.Id;
                    }
                    #endregion

                    var source = accessor.Set<DataModel.Models.BussTendersInfoDetail>().Where(m => m.BussTendersInfoID == MainTableID).ToList();
                    RecuriseCreateOrUpdate(xml.DocumentElement, 0, source, accessor, "", MainTableID);
                    RecuriseDelete(source, xml.DocumentElement, accessor);
                    accessor.SaveChanges();
                    tran.Commit();
                }
            }
        }
        private void RecuriseCreateOrUpdate(XmlElement xmlElement, int parentID, List<DataModel.Models.BussTendersInfoDetail> source, DbContext accessor, string path, int mainTableID)
        {
            var items = xmlElement.SelectNodes("Item");
            foreach (XmlElement item in items)
            {
                var id = TypeHelper.parseInt(item.GetAttribute("Id"));
                if (id < 0)
                {
                    //插入
                    var data = new DataModel.Models.BussTendersInfoDetail()
                    {
                        BussTendersInfoID = mainTableID,
                        CustomerID = TypeHelper.parseInt(item.GetAttribute("CustomerID")),
                        BusinessPoints = TypeHelper.parseInt(item.GetAttribute("BusinessPoints")),
                        TechnologyPoints = TypeHelper.parseInt(item.GetAttribute("TechnologyPoints")),
                        TotalityPoints = TypeHelper.parseInt(item.GetAttribute("TotalityPoints")),
                        WinState = TypeHelper.parseInt(item.GetAttribute("WinState")),
                        WinTime = TypeHelper.parseDateTime(item.GetAttribute("WinTime")),
                    };
                    accessor.Set<DataModel.Models.BussTendersInfoDetail>().Add(data);
                    accessor.SaveChanges();
                    id = data.Id;
                }
                else if (id > 0)
                {
                    var data = accessor.Set<DataModel.Models.BussTendersInfoDetail>().FirstOrDefault(m => m.Id == id);
                    if (data == null)
                    {
                        continue;
                    }
                    data.CustomerID = TypeHelper.parseInt(item.GetAttribute("CustomerID"));
                    data.BusinessPoints = TypeHelper.parseInt(item.GetAttribute("BusinessPoints"));
                    data.TechnologyPoints = TypeHelper.parseInt(item.GetAttribute("TechnologyPoints"));
                    data.TotalityPoints = TypeHelper.parseInt(item.GetAttribute("TotalityPoints"));
                    data.WinState = TypeHelper.parseInt(item.GetAttribute("WinState"));
                    data.WinTime = TypeHelper.parseDateTime(item.GetAttribute("WinTime"));
                    accessor.Entry(data).State = System.Data.Entity.EntityState.Modified;
                    accessor.SaveChanges();
                    id = data.Id;
                }
                RecuriseCreateOrUpdate(item, id, source, accessor, path.ToString() + id.ToString() + "/", mainTableID);
            }
        }
        private void RecuriseDelete(List<DataModel.Models.BussTendersInfoDetail> sources, XmlElement xmlElement, DbContext accessor)
        {
            var allItems = xmlElement.GetElementsByTagName("Item");
            foreach (var source in sources)
            {
                var isIn = false;
                foreach (XmlElement item in allItems)
                {
                    if (TypeHelper.parseInt(item.GetAttribute("Id")) == source.Id)
                    {
                        isIn = true;
                        break;
                    }
                }
                if (!isIn)
                {
                   // accessor.Set<DataModel.Models.BussTendersInfoDetail>().Where(m => m.Id == source.Id).Delete();

                }
            }
        }
        public DataTable GetSubFeeInvoiceList(Common.SqlPageInfo condition)
        {
            string RowColumn = "F.Id,F.FormTableID,c.ConSubName,c.ConSubNumber,ISNULL(p.SubName,'') AS SubName,ISNULL(p.SubNumber,'')  AS SubNumber,c.ConSubFee,f.SubFeeInvoiceDate,f.SubFeeInvoiceMoney,F.ProjSubId,F.ConSubId";
            //RowColumn += ", F.SubXml.value('(Item/@AlreadySumInvoiceMoney)[1]','nvarchar(max)') AS AlreadySumInvoiceMoney ";
            RowColumn += ",isnull((select Sum(SubFeeInvoiceMoney) from  BussSubFeeInvoice where ConSubId=F.ConSubId and  DeleterEmpId=0),0) as  AlreadySumInvoiceMoney";

            RowColumn += ", F.SubXml.value('(Item/@TotalRatio)[1]', 'nvarchar(max)') AS TotalRatio";
            RowColumn += ", (CASE WHEN  F.SubXml.value('(Item/@IsSettle)[1]', 'nvarchar(max)') = '0' THEN '否' ELSE '是' end) AS IsSettle";
            RowColumn += ", F.SubFeeInvoiceType,(select BaseName from BaseData be where be.BaseID=F.SubFeeInvoiceType) as SubFeeInvoiceTypeName ";
            RowColumn += ", ifm.FormDate,ifm.CreatorEmpName as FormCreator,ifm.FormID  ";

            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from dbo.BussSubFeeInvoice F left join BussContractSub c on F.ConSubId=c.ID left join projSub p on p.Id=F.ProjSubId left join IsoForm ifm on F.FormTableID=FormID  where F.DeleterEmpId=0 ");
            SqlParameter[] paras = {
                new SqlParameter("@TextCondtion",SqlDbType.VarChar),
                new SqlParameter("@FormID",SqlDbType.Int),
                new SqlParameter("@CreatorDepId",SqlDbType.Int),
                new SqlParameter("@CreatorEmpId",SqlDbType.Int),
                new SqlParameter("@CompanyID",SqlDbType.Int),
            };

            if (condition.TextCondtion != null && condition.TextCondtion.ToString() != "")
            {
                strSql.Append(" and (c.ConSubNumber like '%'+@TextCondtion+'%' or c.ConSubName like '%'+@TextCondtion+'%' ) ");
                paras[0].Value = condition.TextCondtion;
            }

            if (condition.SelectCondtion != null && condition.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in condition.SelectCondtion)
                {
                    switch (de.Key.ToString())
                    {
                        case "DeleterUserId":
                            if (de.Value.ToString() != "-1")
                            {
                                strSql.Append(" and DeleterUserId=" + de.Value.ToString() + " ");
                            }
                            else
                            {
                                //如果是-1，显示全部
                            }
                            break;
                        case "FormTable":
                            if (de.Value.ToString() == "MustTable")
                            {
                                strSql.Append(" and FormTableID!=0");
                            }
                            break;
                        case "FormTableID":
                            if (de.Value.ToString() != "")
                            {
                                strSql.Append(" and FormTableID=@FormID ");
                                paras[1].Value = Convert.ToInt32(de.Value);
                            }
                            break;
                        case "QueryDeptID":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and F.CreatorDepId=@CreatorDepId");
                                    paras[2].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        case "QueryEmpID":
                            {
                                if (de.Value.ToString() != "0")                                  
                                {
                                    strSql.Append(" and F.CreatorEmpId=@CreatorEmpId");
                                    paras[3].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        case "CompanyID":
                            strSql.Append(" and c.CompanyID=@CompanyID ");
                            paras[4].Value = Convert.ToInt32(de.Value.ToString());
                            break;
                        default:
                            break;
                    }
                }
            }
            //判断PageModel中查询条件是否为空
            //if (condition.PredicateValue != null && condition.PredicateValue.Length > 0 && condition.Predicate != "")
            //{
            //    string selectT = "";
            //    List<SqlParameter> _paramList = paras.ToList();
            //    condition.SetSqlPrams(_paramList, ref selectT);
            //    paras = _paramList.ToArray();
            //    strSql.Append(selectT);
            //}

            //---------------- 得到总记录数-------------------------//
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), paras);

            if (obj == null && obj == DBNull.Value) condition.PageTotleRowCount = 0;
            else condition.PageTotleRowCount = Convert.ToInt32(obj);
            //------------------------------------------------------//

            if (String.IsNullOrEmpty(condition.SelectOrder))
            {
                condition.SelectOrder = "subFeeInvoiceDate desc,F.Id desc";
            }

            string sql = Helper.SqlPage.ExecPageStrSql(condition, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), paras);

        }
    }
}
