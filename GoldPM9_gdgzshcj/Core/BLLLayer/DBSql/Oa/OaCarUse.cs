#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-30 08:42:15
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Data.Entity;
namespace DBSql.OA
{
    public class OaCarUse : EFRepository<DataModel.Models.OaCarUse>
    {
        public DataTable GetCarUseList(Common.SqlPageInfo condition, DataModel.EmpSession userInfo = null)
        {
            DataTable dt = new DataTable();
            string RowColumn = " cu.Id, cu.CarID, cu.UsePurpose, cu.UsePlace, cu.UseLeaderEmp, cu.UseApplyDatetime, cu.UsePeople, cu.UsePeopleNum,cu.IsFinish, cu.UseNote,cu.CreatorEmpId, cu.DateLeavePlan, cu.DateArrivePlan, cu.DateLeave,cu.DateArrive, cu.UseCarDriver,c.CarName,c.CarNumber, empl.EmpName  as UseLeaderEmpName,empl.EmpDepID as UseLeaderEmpDep";
            RowColumn += ",f.Id AS FlowID, f.FlowName,f.FlowStatusID,f.FlowStatusName,f.FlowXml.value('(Root/TurnedEmpIDs/text())[1]', 'nvarchar(200)') AS FlowTurnedEmpIDs,ISNULL(fnode.FlowNodeOrder,0) as FlowNodeOrder,ISNULL(f.FlowFinishControls,'') AS FlowFinishControls ";
            RowColumn += ",isnull(fNode.FlowNodeTypeID,0) as FlowNodeTypeID,(CASE WHEN  isnull(fNode.FlowNodeTypeID,0)=-1 THEN (SELECT COUNT(id) FROM FlowMultiSign WHERE FlowNodeID=fnode.Id AND SignStatus=1 AND SignEmpId=" + userInfo.EmpID + " )  ELSE 0 END ) as FlowMultiSignStatus";
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" SELECT Count(1) FROM dbo.OaCarUse cu LEFT OUTER JOIN dbo.OaCar c ON c.Id = cu.CarID ");
            strSql.Append("  LEFT OUTER JOIN dbo.Flow f on f.FlowRefTable='CarUse'  and f.FlowRefID = cu.Id ");
            strSql.Append(" LEFT JOIN dbo.FlowNode fNode ON f.id=fNode.FlowID AND  fNode.FlowNodeStatusID=" + (int)DataModel.NodeStatus.轮到);

            strSql.Append(" left outer join BaseEmployee empl  on  cu.UseLeaderEmp=empl.EmpID ");
            strSql.Append(" where  cu.DeleterEmpId = 0  ");
            SqlParameter[] paras = {
                new SqlParameter("@TextCondtion",SqlDbType.VarChar),
                new SqlParameter("@DateUpper",SqlDbType.DateTime),
                new SqlParameter("@DateLower",SqlDbType.DateTime),
                  new SqlParameter("@CreatorDepId",SqlDbType.Int),
                new SqlParameter("@CreatorEmpId",SqlDbType.Int),

            };

            if (condition.TextCondtion != null && condition.TextCondtion.ToString() != "")
            {
                strSql.Append(" and (CarName like '%'+@TextCondtion+'%' or CarNumber like '%'+@TextCondtion+'%' ) ");
                paras[0].Value = condition.TextCondtion;
            }

            if (condition.SelectCondtion != null && condition.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in condition.SelectCondtion)
                {
                    if (de.Value == null || de.Value.ToString().Trim() == "") continue;

                    switch (de.Key.ToString())
                    {
                        case "UseStatu":
                            {
                                if (de.Value.ToString().Trim() != "" && de.Value.ToString().Trim() != "0")
                                {
                                    strSql.Append(" AND cu.CarID<>0");

                                }
                            }
                            break;
                        case "QueryDeptID":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and cu.CreatorDepId=@CreatorDepId");
                                    paras[3].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        case "QueryEmpID":
                            {
                                if (de.Value.ToString() != "0")
                                {
                                    strSql.Append(" and cu.CreatorEmpId=@CreatorEmpId");
                                    paras[4].Value = Convert.ToInt32(de.Value.ToString());
                                }
                            }
                            break;
                        default:
                            break;
                    }
                }
            }
            //判断PageModel中查询条件是否为空ew
            if (condition.PredicateValue != null && condition.PredicateValue.Length > 0 && condition.Predicate != "")
            {
                string selectT = "";
                List<SqlParameter> _paramList = paras.ToList();
                condition.SetSqlPrams(_paramList, ref selectT);
                paras = _paramList.ToArray();
                strSql.Append(selectT);
            }

            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), paras);

            if (obj == null && obj == DBNull.Value) condition.PageTotleRowCount = 0;
            else condition.PageTotleRowCount = Convert.ToInt32(obj);


            string sql = Helper.SqlPage.ExecPageStrSql(condition, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), paras);

        }

        public int CheckCarUse(int UseID, int CarID, DateTime DateLower, DateTime DateUpper)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from ( ")
                .Append(" select cu.* ")
                .Append(", CASE WHEN DateLeave = '1900-01-01' THEN DateLeavePlan ELSE DateLeave END AS Date_Leave ")
                .Append(", CASE WHEN DateArrive = '1900-01-01' THEN DateArrivePlan ELSE DateArrive END AS Date_Arrive ")
                //  .Append(", (select ApproveStatusID from Approve where  ApproveRefTable='CarUse' and ApproveRefID=cu.Id) ApproveStatusID ")  and (t.ApproveStatusID = 3)
                .Append(" from OaCarUse cu ")
                .Append(" LEFT OUTER JOIN dbo.OaCar c ON cu.CarID = c.Id ")
                .Append(" where DateLeave = '1900-01-01') as t ") // 只判断未登记的
                .Append("WHERE 1=1 and  t.IsFinish=0  and (t.CarID ={0} AND t.CarID <> 0) and ( t.Date_Leave Between '{1}' And '{2}' Or t.Date_Arrive Between '{1}' And '{2}' or ( t.Date_Leave <= '{1}' And t.Date_Arrive >= '{2}') ) ");
            if (UseID != 0)
            {
                strSql.Append(" AND t.Id<>" + UseID);
            }
            string sql = String.Format(strSql.ToString(), CarID, DateLower, DateUpper);

            return Convert.ToInt32(Helper.SqlPage.ExecuteScalar(DBExecute.ConnectionString, sql.ToString(), null));
        }

        public DataTable GetTotalByCar(Common.SqlPageInfo condition)
        {
            string RowColumn = " t.* ";
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from (")
            .Append(" select c.* ")
            .Append(" , isnull((select cast(sum(DateDiff(minute,DateLeave,DateArrive))/60.0 as decimal(10,1)) from OacarUse carUse where carUse.CarID=c.Id {SeleTime}),0) as TotalCarTime ")

            // .Append(" ,isnull((select sum(Convert(float,KmArrive)-Convert(float,KmLeave)) from OacarUse carUse where carUse.CarID=c.Id {SeleTime}),0) as TotalKm ")
            .Append(" ,isnull((select sum(UseCarFee) from OacarUse carUse where carUse.CarID=c.Id {SeleTime}),0) as TotalCarFee ")
            .Append(" ,isnull((select sum(UseCarFeeInvoice) from OacarUse  carUse where carUse.CarID=c.Id {SeleTime}),0) as TotalInvoice ")
            .Append(" from OaCar c where c.DeleterEmpId = 0 ")
            .Append(" ) as t ")
            .Append("WHERE 1=1");

            SqlParameter[] parameters = {
                new SqlParameter("@DateLower", SqlDbType.DateTime),
                new SqlParameter("@DateUpper", SqlDbType.DateTime)
            };

            string time = "";

            foreach (DictionaryEntry de in condition.SelectCondtion)
            {
                if (de.Key == null)
                    continue;
                switch (de.Key.ToString())
                {
                    case "DateLower":
                        if (de.Value.ToString() != "")
                        {
                            time += " and convert(datetime,convert(varchar(10),DateArrive,111))>=@DateLower";
                            parameters[0].Value = Convert.ToDateTime(de.Value.ToString());
                        }
                        break;
                    case "DateUpper":
                        if (de.Value.ToString() != "")
                        {
                            time += " and convert(datetime,convert(varchar(10),DateArrive,111))<=@DateUpper";
                            parameters[1].Value = Convert.ToDateTime(de.Value.ToString()).AddHours(23.99);
                        }
                        break;
                }
            }
            strSql = strSql.Replace("{SeleTime}", time);



            if (String.IsNullOrEmpty(condition.SelectOrder))
            {
                condition.SelectOrder = "c.Id";
            }  //判断PageModel中查询条件是否为空
            if (condition.PredicateValue != null && condition.PredicateValue.Length > 0 && condition.Predicate != "")
            {
                string selectT = "";
                List<SqlParameter> _paramList = parameters.ToList();
                condition.SetSqlPrams(_paramList, ref selectT);
                parameters = _paramList.ToArray();
                strSql.Append(selectT);
            }

            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), parameters);

            if (obj == null && obj == DBNull.Value) condition.PageTotleRowCount = 0;
            else condition.PageTotleRowCount = Convert.ToInt32(obj);

            string sql = Helper.SqlPage.ExecPageStrSql(condition, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), parameters);
        }

        public DataTable GetTotalByEmp(Common.SqlPageInfo condition)
        {
            string RowColumn = " x.* ";
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from ( ");
            strSql.Append(" select t.*,(select EmpName from BaseEmployee where EmpID=CreatorEmpId ) as UseApplyEmp ")


                .Append(",isnull((SELECT BaseName from dbo.BaseData WHERE baseID=(SELECT EmpDepID FROM BaseEmployee WHERE  EmpID = CreatorEmpId )),'') AS DeptName")

                // .Append(",isnull((select sum(Convert(float,KmArrive)-Convert(float,KmLeave)) from OacarUse where OacarUse.CreatorEmpId=t.CreatorEmpId {SeleTime}),0) as TotalKm ")
                .Append(" , isnull((select cast(sum(DateDiff(minute,DateLeave,DateArrive))/60.0 as decimal(10,1)) from OacarUse where OacarUse.CreatorEmpId=t.CreatorEmpId {SeleTime}),0) as TotalCarTime ")
                .Append(" , isnull((select sum(UseCarFee) from OacarUse where OacarUse.CreatorEmpId=t.CreatorEmpId {SeleTime}),0) as TotalCarFee ")
                .Append(" , isnull((select sum(UseCarFeeInvoice) from OacarUse where OacarUse.CreatorEmpId=t.CreatorEmpId {SeleTime}),0) as TotalInvoice ")
                .Append(" , isnull((select top 1 CreatorDepId from OacarUse where OacarUse.CreatorEmpId=t.CreatorEmpId),'') as CreatorDepId ")
                .Append(" from (select distinct CreatorEmpId from OacarUse where 1=1 {DepID}) as t where 1=1 ")
                .Append(" ) as x ").Append(" WHERE 1=1 ");


            SqlParameter[] parameters = {
                new SqlParameter("@DateLower", SqlDbType.DateTime),
                new SqlParameter("@DateUpper", SqlDbType.DateTime),
                new SqlParameter("@CreatorDepId", SqlDbType.Int,4)
            };

            string time = "";
            string DepID = "";

            if (condition.TextCondtion != null && condition.TextCondtion != "")
            {
                strSql.Append(" and UseApplyEmp like '%" + condition.TextCondtion + "%'");
            }
            foreach (DictionaryEntry de in condition.SelectCondtion)
            {
                if (de.Key == null)
                    continue;
                switch (de.Key.ToString())
                {
                    case "DateLower":
                        if (de.Value.ToString() != "")
                        {
                            time += " and convert(datetime,convert(varchar(10),OacarUse.DateArrive,111))>=@DateLower";
                            parameters[0].Value = Convert.ToDateTime(de.Value.ToString());
                        }
                        break;
                    case "DateUpper":
                        if (de.Value.ToString() != "")
                        {
                            time += " and convert(datetime,convert(varchar(10),OacarUse.DateArrive,111))<=@DateUpper";
                            parameters[1].Value = Convert.ToDateTime(de.Value.ToString()).AddHours(23.99);
                        }
                        break;
                    case "department":
                        if (de.Value.ToString() != "" && de.Value.ToString() != "0")
                        {
                            DepID += " and CreatorDepId=@CreatorDepId";
                            //time += DepID;
                            parameters[2].Value = Convert.ToInt32(de.Value);
                        }
                        break;

                }
            }
            strSql = strSql.Replace("{SeleTime}", time);
            strSql = strSql.Replace("{DepID}", DepID);

            if (condition.PredicateValue != null && condition.PredicateValue.Length > 0 && condition.Predicate != "")
            {
                string selectT = "";
                List<SqlParameter> _paramList = parameters.ToList();
                condition.SetSqlPrams(_paramList, ref selectT);
                parameters = _paramList.ToArray();
                strSql.Append(selectT);
            }

            if (String.IsNullOrEmpty(condition.SelectOrder))
            {
                condition.SelectOrder = "CreatorEmpId";
            }
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), parameters);

            if (obj == null && obj == DBNull.Value) condition.PageTotleRowCount = 0;
            else condition.PageTotleRowCount = Convert.ToInt32(obj);

            string sql = Helper.SqlPage.ExecPageStrSql(condition, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), parameters);

        }


        public void UpdateOaCarList(int[] ids, DataModel.EmpSession userInfo)
        {
            if (ids.Length == 0)
            {
                return;
            }
            string idSet = string.Join(",", ids);
            if (string.IsNullOrEmpty(idSet))
            {
                return;
            }
            var sbSQL = new StringBuilder();
            sbSQL.Append(string.Format("Update OaCarUse set DeleterEmpId={0},DeleterEmpName='{1}',DeletionTime='{2}' WHERE ID IN ({3})", userInfo.EmpID, userInfo.EmpName, DateTime.Now, idSet));
            DAL.DBExecute.ExecuteNonQuery(sbSQL.ToString());
        }

    }
}
