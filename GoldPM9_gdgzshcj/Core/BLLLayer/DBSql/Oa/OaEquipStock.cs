#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-30 08:42:15
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Data;

namespace DBSql.Oa
{
    public class OaEquipStock : EFRepository<DataModel.Models.OaEquipStock>
    {
        public DataTable GetStateSum()
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select EquipID,SUM(case when EquipActionID=1 then EquipCount else 0 end) as RK,");
            strSql.Append(" SUM(case when EquipActionID=2 then EquipCount else 0 end) as TQ,");
            strSql.Append(" SUM(case when EquipActionID=3 then EquipCount else 0 end) as GH,");
            strSql.Append(" SUM(case when EquipActionID=4 then EquipCount else 0 end) as WS,");
            strSql.Append(" SUM(case when EquipActionID=5 then EquipCount else 0 end) as BF  from OaEquipStock");
            strSql.Append(" group by EquipID");

            return DAL.DBExecute.ExecuteDataTable(strSql.ToString());
        }

        public int GetStateSum1(int id)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select EquipID,SUM(case when EquipActionID=1 then EquipCount else 0 end) as RK,");
            strSql.Append(" SUM(case when EquipActionID=2 then EquipCount else 0 end) as TQ,");
            strSql.Append(" SUM(case when EquipActionID=3 then EquipCount else 0 end) as GH,");
            strSql.Append(" SUM(case when EquipActionID=4 then EquipCount else 0 end) as WS,");
            strSql.Append(" SUM(case when EquipActionID=5 then EquipCount else 0 end) as BF  from OaEquipStock");
            strSql.Append(" where EquipID = " + id);
            strSql.Append(" group by EquipID");

            StringBuilder str = new StringBuilder();
            str.Append(" select EquipTotalCount from OaEquipment where id = " + id);
            DataTable dt1 = DAL.DBExecute.ExecuteDataTable(strSql.ToString());
            DataTable dt2 = DAL.DBExecute.ExecuteDataTable(str.ToString());

            return int.Parse(dt2.Rows[0][0].ToString()) + int.Parse(dt1.Rows[0]["RK"].ToString()) - int.Parse(dt1.Rows[0]["BF"].ToString());

        }
    }
}
