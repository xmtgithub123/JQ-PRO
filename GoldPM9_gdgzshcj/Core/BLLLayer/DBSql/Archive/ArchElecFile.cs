#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-30 16:36:50
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Configuration;
using System.IO;
using Common.Data.Extenstions;
using System.Data;
using DAL;

namespace DBSql.Archive
{
    public class ArchElecFile : EFRepository<DataModel.Models.ArchElecFile>
    {
        public int UploadFile(int refID, int ProjID, DataModel.EmpSession emp)
        {
            string refTable = "ArchElecFile";
            string UpFileRoot = ConfigurationManager.AppSettings["UpFileRoot"].ToString();
            string path = ConfigurationManager.AppSettings["FtpLocalPath"].ToString() + "\\Emp" + emp.EmpID.ToString();
            string AttachPath = refTable + @"/P" + refID.ToString();

            if (!Directory.Exists(path) || !Directory.Exists(UpFileRoot)) return 0;
            string GoldFile = string.Format(@"{0}\{1}\P{2}", UpFileRoot, refTable, refID.ToString());

            if (!Directory.Exists(GoldFile)) Directory.CreateDirectory(GoldFile);

            var FileList = Directory.GetFiles(path).ToList();

            LoadChildDir(path, FileList);


            foreach (var file in FileList)
            {
                if (file.EndsWith(".JqTmp")) continue;

                System.IO.FileInfo fi = new System.IO.FileInfo(file);
                string FileName = file.Substring(file.LastIndexOf("\\") + 1);

                string NewFile = string.Format(@"{0}\{1}", GoldFile, FileName);
                int i = 1;
                while (File.Exists(NewFile))
                {
                    NewFile = GoldFile + string.Format(@"\({0}){1}", i.ToString(), FileName);
                    i++;
                }

                FileName = NewFile.Substring(NewFile.LastIndexOf("\\") + 1);

                var ba = new DataModel.Models.ArchElecFile()
                {
                    ElecFileName = FileName,
                    ElecFilePath = AttachPath + @"/" + FileName,
                    ElecSize = fi.Length,
                    CreatorEmpId = emp.EmpID,
                    CreatorEmpName = emp.EmpName,
                    CreatorDepID = emp.EmpDepID,
                    CreatorDepName = emp.EmpDepName,
                    CreationTime = DateTime.Now,
                    LastModificationTime = DateTime.Now,
                    LastModifierEmpId = emp.EmpID,
                    LastModifierEmpName = emp.EmpName,
                    ArchElecFileId = refID,
                    ArchElecFileRefTable = refTable,
                    FileEmpId = emp.EmpID,
                    FileEmpName = emp.EmpName,
                    ElecExt = fi.Extension,
                    ArchProjId = ProjID,
                    ParentId = 0,
                    Note = "",
                    ElecFileType = 0,
                    ElecFileUnit = "",
                    ElecFileVersionId = 1,
                    ElecScret = 0,
                    ElecFileXml = "",

                };
                try
                {
                    File.Move(file, GoldFile + "\\" + FileName);
                }
                catch { }
                //判断文件是否存在
                Add(ba);
            }
            if(FileList.Count > 0 )
                UnitOfWork.SaveChanges();

            return FileList.Count;
        }

        private void LoadChildDir(string Dir, List<string> arr)
        {
            var childArr = Directory.GetDirectories(Dir);
            foreach (string item in childArr)
            {
                var childFile = Directory.GetFiles(item).Where(s => !s.EndsWith(".JqTmp"));
                if (childFile.Count() > 0) arr.AddRange(childFile);

                var childDir = Directory.GetDirectories(item);
                if (childDir.Count() > 0)
                {
                    foreach (var child in childDir)
                    {
                        LoadChildDir(child, arr);
                    }
                }
            }
        }

        public bool DeleteDir(int ArchElecFileId,string refTable = "ArchElecFile")
        {
            var TWhere = QueryBuild<DataModel.Models.ArchElecFile>.True();
            TWhere = TWhere.And(p => p.ArchElecFileId == ArchElecFileId && p.ArchElecFileRefTable == refTable);
            var arr = GetList(TWhere);
            string strPath = ConfigurationManager.AppSettings["UpFileRoot"].ToString();
            foreach (var item in arr)
            {
                string FilePath = String.Format(@"{0}\{1}", strPath, item.ElecFilePath);
                if (File.Exists(FilePath))
                {
                    try
                    {
                        File.Delete(FilePath);
                    }
                    catch { return false; }
                }
            }
            Delete(TWhere);
            return true;
        }
        public bool Delete(List<int> refIDArr)
        {
            var TWhere = QueryBuild<DataModel.Models.ArchElecFile>.True();
            TWhere = TWhere.And(p => refIDArr.Contains(p.Id));
            var arr = GetList(TWhere);
            string strPath = ConfigurationManager.AppSettings["UpFileRoot"].ToString();
            foreach (var item in arr)
            {
                string FilePath = String.Format(@"{0}\{1}", strPath, item.ElecFilePath);
                if (File.Exists(FilePath))
                {
                    try
                    {
                        File.Delete(FilePath);
                    }
                    catch { return false; }
                }
            }
            Delete(TWhere);
            return true;
        }

        /// <summary>
        /// 获取不是当前用户上传的图档
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public DataTable GetNOUserUploadFile(int[] id,int empId)
        {
            string ids = string.Join(",", id);
            using (var dt = DBExecute.ExecuteDataTable(string.Format(@" select * from dbo.ArchElecFile
 where  id IN ({0}) and FileEmpId!={1}", ids, empId)))
            {
               
                return dt;
            }
        }

        /// <summary>
        /// 得到审批通过的文件列表
        /// </summary>
        /// <param name="id"></param>
        /// <param name="empId"></param>
        /// <returns></returns>
        public DataTable GetApporveUploadFile(  int empId)
        {
            
            using (var dt = DBExecute.ExecuteDataTable(string.Format(@"  select IsoForm.ColAttVal1 from  Flow
inner join IsoForm on Flow.FlowRefID=IsoForm.FormID
 where Flow.CreatorEmpId={0} and FlowRefTable='IsoFormArchive' and FlowStatusID=3   ",  empId)))
            {

                return dt;
            }
        }

    }
}
