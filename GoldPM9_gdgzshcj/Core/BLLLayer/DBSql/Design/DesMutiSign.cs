#region <auto-generated>
//此代码由T4模板自动生成 
//生成时间 2016-07-19 21:50:51
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Common.Data;
using Common.Data.Extenstions;
using DAL;
using System.Data;
using System.Data.SqlClient;
using System.Collections;

namespace DBSql.Design
{
    public class DesMutiSign : EFRepository<DataModel.Models.DesMutiSign>
    {
        public DataTable DesMutiSignkList(Common.SqlPageInfo condition)
        {
            string RowColumn = " dms.*,dsr.RecEmpId,dsr.RecEmpName,dsr.RecContent,dsr.RecStatus,dsr.Id as RecId,RecSpecName,dsr.RecDealDate ";
            RowColumn += ",isnull((select Id from Flow where FlowRefID=dms.Id and FlowRefTable='DesMutiSign'),0) as ApproveFlowID ";
            RowColumn += ",(case when MutiStatus=0 then '会签中' else '会签结束' end ) as statusName";
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select Count(1) from DesMutiSign dms left join DesMutiSignRec dsr on dms.Id=dsr.MutiSignId where 1=1  ");
            SqlParameter[] param = {
                                        new SqlParameter("@txtContent",SqlDbType.VarChar),
                                        new SqlParameter("@TaskID",SqlDbType.Int),
                                        new SqlParameter("@RecEmpId",SqlDbType.Int),
            };
            if (condition.TextCondtion != null && condition.TextCondtion.ToString() != "")
            {
                strSql.Append(" and ( (select count(1) from project where ProjId=project.Id and (ProjNumber like '%'+@txtContent+'%' or ProjName like '%'+@txtContent+'%') )>0  ");
                strSql.Append(" or (select count(1) from DesTask where DesTask.Id=dms.TaskId and TaskName like '%'+@txtContent+'%' )>0 ) ");
                param[0].Value = condition.TextCondtion.ToString();
            }
            if (condition.SelectCondtion != null && condition.SelectCondtion.Count > 0)
            {
                foreach (DictionaryEntry de in condition.SelectCondtion)
                {
                    switch (de.Key.ToString())
                    {
                        case "TaskID":
                            if (de.Value.ToString() != "-1")
                            {
                                strSql.Append(" and dms.TaskID=@TaskID ");
                                param[1].Value = Convert.ToInt32(de.Value);
                            }
                            break;
                        case "DeleterEmpId":
                            strSql.Append(" and DeleterEmpId=" + de.Value.ToString() + "");
                            break;
                        case "otherColumn":
                            if (de.Value.ToString() != "")
                            {
                                RowColumn += de.Value.ToString();
                            }
                            break;
                        case "FlowStatusID":
                            if (de.Value.ToString() != "0")
                            {
                                strSql.Append(" and (select FlowStatusID from Flow where FlowRefTable='DesMutiSign' and FlowRefID=dms.Id)=" + de.Value.ToString() + " ");
                            }
                            break;
                        case "RecEmpId":
                            strSql.Append(" and dsr.RecEmpId=@RecEmpId ");
                            param[2].Value = Convert.ToInt32(de.Value.ToString());
                            break;
                        case "RecStatus":
                            strSql.Append(" and RecStatus=" + de.Value.ToString() + " ");
                            break;
                        default:
                            break;
                    }
                }
            }

            //判断PageModel中查询条件是否为空
            if (condition.PredicateValue != null && condition.PredicateValue.Length > 0 && condition.Predicate != "")
            {
                string selectT = "";
                List<SqlParameter> _paramList = param.ToList();
                condition.SetSqlPrams(_paramList, ref selectT);
                param = _paramList.ToArray();
                strSql.Append(selectT);
            }

            //---------------- 得到总记录数-------------------------//
            object obj = DBExecute.ExecuteScalar(DBExecute.ConnectionString, strSql.ToString(), param);

            if (obj == null && obj == DBNull.Value) condition.PageTotleRowCount = 0;
            else condition.PageTotleRowCount = Convert.ToInt32(obj);
            //------------------------------------------------------//

            if (String.IsNullOrEmpty(condition.SelectOrder))
            {
                condition.SelectOrder = "CreationTime desc,dms.Id desc";
            }

            string sql = Helper.SqlPage.ExecPageStrSql(condition, RowColumn, strSql);

            return DBExecute.ExecuteDataTable(DBExecute.ConnectionString, sql.ToString(), param);
        }


        public int InsertDesMutiSign(DataModel.Models.DesMutiSign model, List<DataModel.Models.DesMutiSignAttach> AttachIDs, List<DataModel.Models.DesMutiSignRec> SignRecList)
        {
            using (var tran = this.DbContext.Database.BeginTransaction())
            {
                try
                {
                    Add(model);
                    this.DbContext.SaveChanges();
                    //插入关联附件
                    foreach (DataModel.Models.DesMutiSignAttach attCh in AttachIDs)
                    {
                        attCh.MutiSignID = model.Id;
                        this.DbContext.Set<DataModel.Models.DesMutiSignAttach>().Add(attCh);
                    }
                    var ba = new DBSql.Sys.BaseAttach();
                    ba.DbContextRepository(this.DbContext);
                    ba.MoveFile(model.Id, model.CreatorEmpId, model.CreatorEmpName);

                    //插入接收人
                    foreach (DataModel.Models.DesMutiSignRec RecItem in SignRecList)
                    {
                        RecItem.MutiSignId = model.Id;
                        DataModel.Models.BaseEmployee emp = new DBSql.Sys.BaseEmployee().Get(RecItem.RecEmpId);
                        RecItem.RecEmpDepId = emp.EmpDepID;
                        RecItem.RecEmpDepName = emp.EmpDepName;
                        RecItem.RecTime = System.DateTime.Now;
                        RecItem.RecStatus = 0;
                        RecItem.RecContent = "";
                        RecItem.RecNeedSign = true;//强制签名
                        this.DbContext.Set<DataModel.Models.DesMutiSignRec>().Add(RecItem);
                    }
                    this.DbContext.SaveChanges();
                    tran.Commit();
                    return model.Id;
                }
                catch (Exception ex)
                {
                    tran.Rollback();
                    return -1;
                    throw;
                }
            }
        }
    }
}
