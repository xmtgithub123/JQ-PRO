<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="manager.ttinclude"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#
	var arr = DbHelper.GetV_SystemTableStructure(config.ConnectionString);
	var FKey = DbHelper.GetV_SystemTableFKey(config.ConnectionString);
	foreach(BaseNameSpace item in DbHelper.GetBaseNameSpaceTables(config.ConnectionString, config.TableNames))
	{
		string ClassName = item.TableNames;
		string NameSpace =  item.DBSqlNameSpace.Replace("/","."); 
        string DirPath = "tt/Web/" + item.DBSqlNameSpace + "/Controllers/";

		string First = DbHelper.GetFirstString(arr,item.TableNames);
		string PKCol = DbHelper.GetPKColumn(arr,item.TableNames);
		string FirstDate = DbHelper.GetFirstDateTime(arr,item.TableNames);
		List<V_SystemTableFKey> RefFkey = DbHelper.GetFKeyColumn(FKey,item.TableNames);
#>
<# manager.StartNewFile(ClassName+"Controller.cs",DirPath); #>
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Web.Mvc;
using JQ.Util;
using JQ.Web;
using DataModel.Models;
using System.ComponentModel.DataAnnotations;
namespace <#=NameSpace#>.Controllers
{
[Description("<#=item.TableNames#>")]
public class <#=ClassName#>Controller : CoreController
    {
        private DBSql.<#=NameSpace#>.<#=ClassName#> op = new DBSql.<#=NameSpace#>.<#=ClassName#>();
        private DoResult doResult = DoResultHelper.doError("未知错误!");

        #region 列表
        [Description("列表")]
        public ActionResult list()
        {
            return View();
        } 
        #endregion

        #region 列表json
        [Description("列表json")]
        [HttpPost]
        public string json()
        {
            Common.SqlPageInfo PageModel = new Common.SqlPageInfo();
            if (!PageModel.SelectOrder.isNotEmpty())
            {
                PageModel.SelectOrder = "<#=PKCol#> desc";
            }
            var list = op.GetPagedDynamic(PageModel).ToList();
            
            return JavaScriptSerializerUtil.getJson(new
            {
                total = PageModel.PageTotleRowCount,
                rows = list
            });
        } 
        #endregion

        #region 添加
        [Description("添加")]
        public ActionResult add()
        {
            var model = new <#=ClassName#>();
            return View("info", model);
        } 
        #endregion

        #region 编辑
        [Description("编辑")]
        public ActionResult edit(int id)
        {
            var model = op.Get(id);
            return View("info", model);
        } 
        #endregion

        #region 删除
        [Description("删除")]
        public ActionResult del(int[] id)
        {
            int reuslt = 0;
            op.Delete(s => id.Contains(s.<#=PKCol#>));
            op.UnitOfWork.SaveChanges();
            DoResult dr = reuslt > 0 ? DoResultHelper.doSuccess(reuslt, "操作成功") : DoResultHelper.doSuccess(reuslt, "操作失败");
            return Json(dr);
        } 
        #endregion

        #region 保存
        [Description("保存")]
        [HttpPost]
        public ActionResult save(int <#=PKCol#>)
        {
            var model = new <#=ClassName#>();
            if (<#=PKCol#> > 0)
            {
                model = op.Get(<#=PKCol#>);
            }
            model.MvcSetValue();

            int reuslt = 0;                      
            if (model.<#=PKCol#> > 0)
            {
				op.Edit(model);
            }
            else
            {
                op.Add(model);
            }
			op.UnitOfWork.SaveChanges();
			if (<#=PKCol#> <= 0)
            {
                using (var ba = new DBSql.Sys.BaseAttach())
                {
                    ba.MoveFile(model.<#=PKCol#>, userInfo.EmpID, userInfo.EmpName);
                }
            }
			reuslt = model.<#=PKCol#> ;
            DoResult dr = reuslt > 0 ? DoResultHelper.doSuccess(model.<#=PKCol#>, "操作成功") : DoResultHelper.doSuccess(model.<#=PKCol#>, "操作失败");
            return Json(dr);
        } 
        #endregion
    }
}
<# manager.EndBlock(); #>
<#}#>
<# manager.Process(true); #>
<#+
	public class config
	{ 
		public static readonly string ConnectionString="Initial Catalog=JQPM9_gdgzshcj;Data Source=192.168.0.8\\j9SQL2008R2;user id=sa;password=j9;";
		public static readonly string TableNames="";
	}
#>